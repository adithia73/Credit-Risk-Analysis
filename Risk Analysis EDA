{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9247228,"sourceType":"datasetVersion","datasetId":5594076}],"dockerImageVersionId":30761,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":5,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Risk Analysis Exploratory Data Analysis (EDA)\n\nThis notebook conducts a comprehensive Exploratory Data Analysis (EDA) for risk prediction. The goal is to understand the distribution of data, relationships between variables, and identify key factors contributing to credit risk.","metadata":{}},{"cell_type":"markdown","source":"## 1**. Importing Libraries**","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport os\nfrom IPython.core.interactiveshell import InteractiveShell\nInteractiveShell.ast_node_interactivity = \"all\"\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:34:24.991123Z","iopub.execute_input":"2024-08-26T01:34:24.991926Z","iopub.status.idle":"2024-08-26T01:34:25.000426Z","shell.execute_reply.started":"2024-08-26T01:34:24.991875Z","shell.execute_reply":"2024-08-26T01:34:24.998770Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"markdown","source":"## 2. **Loading Datasets**","metadata":{}},{"cell_type":"code","source":"# Import necessary libraries\nimport pandas as pd\n\n# Load datasets\nbureau = pd.read_csv('/kaggle/input/credit-risk/data_final/bureau.csv')\n\nprevious_application = pd.read_csv('/kaggle/input/credit-risk/data_final/previous_application.csv')\npos_cash_balance = pd.read_csv('/kaggle/input/credit-risk/data_final/POS_CASH_balance.csv')\ninstallments_payments = pd.read_csv('/kaggle/input/credit-risk/data_final/installments_payments.csv')\ncredit_card_balance = pd.read_csv('/kaggle/input/credit-risk/data_final/credit_card_balance.csv')\napplication = pd.read_csv('/kaggle/input/credit-risk/data_final/application.csv')\nbureau_balance = pd.read_csv('/kaggle/input/credit-risk/data_final/bureau_balance.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:34:25.003379Z","iopub.execute_input":"2024-08-26T01:34:25.003907Z","iopub.status.idle":"2024-08-26T01:35:45.573832Z","shell.execute_reply.started":"2024-08-26T01:34:25.003838Z","shell.execute_reply":"2024-08-26T01:35:45.572422Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":"#### **Make Samples of Data**","metadata":{}},{"cell_type":"code","source":"def sample_5_percent(df):\n    return df.sample(frac=0.05, random_state=42)\n\n# Apply the function to each dataset\nbureau_sample = sample_5_percent(bureau)\nprevious_application_sample = sample_5_percent(previous_application)\npos_cash_balance_sample = sample_5_percent(pos_cash_balance)\ninstallments_payments_sample = sample_5_percent(installments_payments)\ncredit_card_balance_sample = sample_5_percent(credit_card_balance)\napplication_sample = sample_5_percent(application)\nbureau_balance_sample = sample_5_percent(bureau_balance)\n\n# Save the sampled data to new CSV files (optional)\n#bureau_sample.to_csv(r'/kaggle/input/credit-risk/data_final/bureau_sample.csv', index=False)\n#previous_application_sample.to_csv(r'/kaggle/input/credit-risk/data_final/previous_application_sample.csv', index=False)\n#pos_cash_balance_sample.to_csv(r'/kaggle/input/credit-risk/data_final/pos_cash_balance_sample.csv', index=False)\n#installments_payments_sample.to_csv(r'/kaggle/input/credit-risk/data_final/installments_payments_sample.csv', index=False)\n#credit_card_balance_sample.to_csv(r'/kaggle/input/credit-risk/data_final/credit_card_balance_sample.csv', index=False)\n#application_sample.to_csv(r'/kaggle/input/credit-risk/data_final/application_sample.csv', index=False)\n#bureau_balance_sample.to_csv(r'/kaggle/input/credit-risk/data_final/bureau_balance_sample.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:45.575527Z","iopub.execute_input":"2024-08-26T01:35:45.575928Z","iopub.status.idle":"2024-08-26T01:35:48.744572Z","shell.execute_reply.started":"2024-08-26T01:35:45.575887Z","shell.execute_reply":"2024-08-26T01:35:48.743430Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":"### **Sample again**","metadata":{}},{"cell_type":"code","source":"# Sample 5% of the application data\napplication_sample = application.sample(frac=0.05, random_state=42)\n\n# Get the sampled SK_IDs\nsampled_sk_ids = application_sample['SK_ID_CURR']\n\n# Sample the bureau data using the sampled SK_IDs\nbureau_sample = bureau[bureau['SK_ID_CURR'].isin(sampled_sk_ids)]\n\n# Get the sampled BUREAU_IDs\nsampled_bureau_ids = bureau_sample['SK_ID_BUREAU']\n\n# Sample the bureau_balance data using the sampled BUREAU_IDs\nbureau_balance_sample = bureau_balance[bureau_balance['SK_ID_BUREAU'].isin(sampled_bureau_ids)]\n\n# Sample the rest of the datasets using the sampled SK_IDs\nprevious_application_sample = previous_application[previous_application['SK_ID_CURR'].isin(sampled_sk_ids)]\npos_cash_balance_sample = pos_cash_balance[pos_cash_balance['SK_ID_CURR'].isin(sampled_sk_ids)]\ninstallments_payments_sample = installments_payments[installments_payments['SK_ID_CURR'].isin(sampled_sk_ids)]\ncredit_card_balance_sample = credit_card_balance[credit_card_balance['SK_ID_CURR'].isin(sampled_sk_ids)]\n\n# Save the sampled data to new CSV files in the data_sample/ directory\n#application_sample.to_csv(r'data_samples/application_sample.csv', index=False)\n#bureau_sample.to_csv(r'data_samples/bureau_sample.csv', index=False)\n#bureau_balance_sample.to_csv(r'data_samples/bureau_balance_sample.csv', index=False)\n#previous_application_sample.to_csv(r'data_samples/previous_application_sample.csv', index=False)\n#pos_cash_balance_sample.to_csv(r'data_samples/pos_cash_balance_sample.csv', index=False)\n#installments_payments_sample.to_csv(r'data_samples/installments_payments_sample.csv', index=False)\n#credit_card_balance_sample.to_csv(r'data_samples/credit_card_balance_sample.csv', index=False)\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:48.747211Z","iopub.execute_input":"2024-08-26T01:35:48.747609Z","iopub.status.idle":"2024-08-26T01:35:49.739407Z","shell.execute_reply.started":"2024-08-26T01:35:48.747567Z","shell.execute_reply":"2024-08-26T01:35:49.738150Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":"## 3. **Data Overview**\n","metadata":{}},{"cell_type":"markdown","source":"#### **Analyzing the SK_ID_CURR**","metadata":{}},{"cell_type":"code","source":"# Check for unique SK_ID_CURR in the application table\nis_unique_application = application['SK_ID_CURR'].is_unique\n\n# Count of unique SK_ID_CURR in other datasets\nunique_counts = {\n    \"bureau\": bureau['SK_ID_CURR'].nunique(),\n    \"credit_card_balance\": credit_card_balance['SK_ID_CURR'].nunique(),\n    \"installments_payments\": installments_payments['SK_ID_CURR'].nunique(),\n    \"pos_cash_balance\": pos_cash_balance['SK_ID_CURR'].nunique(),\n    \"previous_application\": previous_application['SK_ID_CURR'].nunique()\n}\n\n# Percentage of overlap with application data\ntotal_rows = {\n    \"bureau\": len(bureau),\n    \"credit_card_balance\": len(credit_card_balance),\n    \"installments_payments\": len(installments_payments),\n    \"pos_cash_balance\": len(pos_cash_balance),\n    \"previous_application\": len(previous_application)\n}\n\noverlap_percentage = {\n    \"bureau\": bureau['SK_ID_CURR'].isin(application['SK_ID_CURR']).mean() * 100,\n    \"credit_card_balance\": credit_card_balance['SK_ID_CURR'].isin(application['SK_ID_CURR']).mean() * 100,\n    \"installments_payments\": installments_payments['SK_ID_CURR'].isin(application['SK_ID_CURR']).mean() * 100,\n    \"pos_cash_balance\": pos_cash_balance['SK_ID_CURR'].isin(application['SK_ID_CURR']).mean() * 100,\n    \"previous_application\": previous_application['SK_ID_CURR'].isin(application['SK_ID_CURR']).mean() * 100\n}\n\n# Count of SK_ID_CURR in application that do not have presence in other datasets\nno_presence_counts = {\n    \"bureau\": (~application['SK_ID_CURR'].isin(bureau['SK_ID_CURR'])).sum(),\n    \"credit_card_balance\": (~application['SK_ID_CURR'].isin(credit_card_balance['SK_ID_CURR'])).sum(),\n    \"installments_payments\": (~application['SK_ID_CURR'].isin(installments_payments['SK_ID_CURR'])).sum(),\n    \"pos_cash_balance\": (~application['SK_ID_CURR'].isin(pos_cash_balance['SK_ID_CURR'])).sum(),\n    \"previous_application\": (~application['SK_ID_CURR'].isin(previous_application['SK_ID_CURR'])).sum()\n}\n\n# Calculate percentage of application IDs not present in other datasets\nno_presence_percentage = {key: (value / len(application)) * 100 for key, value in no_presence_counts.items()}\n\nis_unique_application \nunique_counts\ntotal_rows\noverlap_percentage\nno_presence_counts\nno_presence_percentage\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:49.740937Z","iopub.execute_input":"2024-08-26T01:35:49.741361Z","iopub.status.idle":"2024-08-26T01:35:51.263447Z","shell.execute_reply.started":"2024-08-26T01:35:49.741318Z","shell.execute_reply":"2024-08-26T01:35:51.262164Z"},"trusted":true},"execution_count":15,"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'bureau': 263491,\n 'credit_card_balance': 86905,\n 'installments_payments': 291643,\n 'pos_cash_balance': 289444,\n 'previous_application': 291057}"},"metadata":{}},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'bureau': 1465325,\n 'credit_card_balance': 3227965,\n 'installments_payments': 11591592,\n 'pos_cash_balance': 8543375,\n 'previous_application': 1413701}"},"metadata":{}},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'bureau': 100.0,\n 'credit_card_balance': 100.0,\n 'installments_payments': 100.0,\n 'pos_cash_balance': 100.0,\n 'previous_application': 100.0}"},"metadata":{}},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'bureau': 44020,\n 'credit_card_balance': 220606,\n 'installments_payments': 15868,\n 'pos_cash_balance': 18067,\n 'previous_application': 16454}"},"metadata":{}},{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"{'bureau': 14.314935075493235,\n 'credit_card_balance': 71.73922233676193,\n 'installments_payments': 5.160140612856125,\n 'pos_cash_balance': 5.8752369833924645,\n 'previous_application': 5.350702901684818}"},"metadata":{}}]},{"cell_type":"code","source":"# Check if SK_ID_BUREAU is unique in the bureau table\nis_unique_bureau = bureau['SK_ID_BUREAU'].is_unique\n\n# Count of unique SK_ID_BUREAU in bureau_balance\nunique_counts_bureau = bureau_balance['SK_ID_BUREAU'].nunique()\n\n# Total number of rows in bureau_balance\ntotal_rows_bureau_balance = len(bureau_balance)\n\n# Percentage of overlap with bureau data\noverlap_percentage_bureau_balance = bureau_balance['SK_ID_BUREAU'].isin(bureau['SK_ID_BUREAU']).mean() * 100\n\n# Count of SK_ID_BUREAU in bureau that do not have presence in bureau_balance\nno_presence_counts_bureau = (~bureau['SK_ID_BUREAU'].isin(bureau_balance['SK_ID_BUREAU'])).sum()\n\n# Calculate percentage of bureau IDs not present in bureau_balance\nno_presence_percentage_bureau = (no_presence_counts_bureau / len(bureau)) * 100\n\nis_unique_bureau\nunique_counts_bureau \ntotal_rows_bureau_balance\noverlap_percentage_bureau_balance\nno_presence_counts_bureau\nno_presence_percentage_bureau\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:51.265028Z","iopub.execute_input":"2024-08-26T01:35:51.265496Z","iopub.status.idle":"2024-08-26T01:35:51.803286Z","shell.execute_reply.started":"2024-08-26T01:35:51.265452Z","shell.execute_reply":"2024-08-26T01:35:51.801959Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"523515"},"metadata":{}},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"14701612"},"metadata":{}},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"100.0"},"metadata":{}},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"941810"},"metadata":{}},{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"64.2731134731203"},"metadata":{}}]},{"cell_type":"markdown","source":"## 4. **Exploratory Data Analysis**","metadata":{}},{"cell_type":"markdown","source":"#### **APPLICATION DATASET**","metadata":{}},{"cell_type":"code","source":"application.columns.tolist()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-08-26T01:35:51.804906Z","iopub.execute_input":"2024-08-26T01:35:51.805328Z","iopub.status.idle":"2024-08-26T01:35:51.816536Z","shell.execute_reply.started":"2024-08-26T01:35:51.805286Z","shell.execute_reply":"2024-08-26T01:35:51.815395Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"['Unnamed: 0',\n 'SK_ID_CURR',\n 'TARGET',\n 'NAME_CONTRACT_TYPE',\n 'CODE_GENDER',\n 'FLAG_OWN_CAR',\n 'FLAG_OWN_REALTY',\n 'CNT_CHILDREN',\n 'AMT_INCOME_TOTAL',\n 'AMT_CREDIT',\n 'AMT_ANNUITY',\n 'AMT_GOODS_PRICE',\n 'NAME_TYPE_SUITE',\n 'NAME_INCOME_TYPE',\n 'NAME_EDUCATION_TYPE',\n 'NAME_FAMILY_STATUS',\n 'NAME_HOUSING_TYPE',\n 'REGION_POPULATION_RELATIVE',\n 'DAYS_BIRTH',\n 'DAYS_EMPLOYED',\n 'DAYS_REGISTRATION',\n 'DAYS_ID_PUBLISH',\n 'OWN_CAR_AGE',\n 'FLAG_MOBIL',\n 'FLAG_EMP_PHONE',\n 'FLAG_WORK_PHONE',\n 'FLAG_CONT_MOBILE',\n 'FLAG_PHONE',\n 'FLAG_EMAIL',\n 'OCCUPATION_TYPE',\n 'CNT_FAM_MEMBERS',\n 'REGION_RATING_CLIENT',\n 'REGION_RATING_CLIENT_W_CITY',\n 'WEEKDAY_APPR_PROCESS_START',\n 'HOUR_APPR_PROCESS_START',\n 'REG_REGION_NOT_LIVE_REGION',\n 'REG_REGION_NOT_WORK_REGION',\n 'LIVE_REGION_NOT_WORK_REGION',\n 'REG_CITY_NOT_LIVE_CITY',\n 'REG_CITY_NOT_WORK_CITY',\n 'LIVE_CITY_NOT_WORK_CITY',\n 'ORGANIZATION_TYPE',\n 'EXT_SOURCE_1',\n 'EXT_SOURCE_2',\n 'EXT_SOURCE_3',\n 'APARTMENTS_AVG',\n 'BASEMENTAREA_AVG',\n 'YEARS_BEGINEXPLUATATION_AVG',\n 'YEARS_BUILD_AVG',\n 'COMMONAREA_AVG',\n 'ELEVATORS_AVG',\n 'ENTRANCES_AVG',\n 'FLOORSMAX_AVG',\n 'FLOORSMIN_AVG',\n 'LANDAREA_AVG',\n 'LIVINGAPARTMENTS_AVG',\n 'LIVINGAREA_AVG',\n 'NONLIVINGAPARTMENTS_AVG',\n 'NONLIVINGAREA_AVG',\n 'APARTMENTS_MODE',\n 'BASEMENTAREA_MODE',\n 'YEARS_BEGINEXPLUATATION_MODE',\n 'YEARS_BUILD_MODE',\n 'COMMONAREA_MODE',\n 'ELEVATORS_MODE',\n 'ENTRANCES_MODE',\n 'FLOORSMAX_MODE',\n 'FLOORSMIN_MODE',\n 'LANDAREA_MODE',\n 'LIVINGAPARTMENTS_MODE',\n 'LIVINGAREA_MODE',\n 'NONLIVINGAPARTMENTS_MODE',\n 'NONLIVINGAREA_MODE',\n 'APARTMENTS_MEDI',\n 'BASEMENTAREA_MEDI',\n 'YEARS_BEGINEXPLUATATION_MEDI',\n 'YEARS_BUILD_MEDI',\n 'COMMONAREA_MEDI',\n 'ELEVATORS_MEDI',\n 'ENTRANCES_MEDI',\n 'FLOORSMAX_MEDI',\n 'FLOORSMIN_MEDI',\n 'LANDAREA_MEDI',\n 'LIVINGAPARTMENTS_MEDI',\n 'LIVINGAREA_MEDI',\n 'NONLIVINGAPARTMENTS_MEDI',\n 'NONLIVINGAREA_MEDI',\n 'FONDKAPREMONT_MODE',\n 'HOUSETYPE_MODE',\n 'TOTALAREA_MODE',\n 'WALLSMATERIAL_MODE',\n 'EMERGENCYSTATE_MODE',\n 'OBS_30_CNT_SOCIAL_CIRCLE',\n 'DEF_30_CNT_SOCIAL_CIRCLE',\n 'OBS_60_CNT_SOCIAL_CIRCLE',\n 'DEF_60_CNT_SOCIAL_CIRCLE',\n 'DAYS_LAST_PHONE_CHANGE',\n 'FLAG_DOCUMENT_2',\n 'FLAG_DOCUMENT_3',\n 'FLAG_DOCUMENT_4',\n 'FLAG_DOCUMENT_5',\n 'FLAG_DOCUMENT_6',\n 'FLAG_DOCUMENT_7',\n 'FLAG_DOCUMENT_8',\n 'FLAG_DOCUMENT_9',\n 'FLAG_DOCUMENT_10',\n 'FLAG_DOCUMENT_11',\n 'FLAG_DOCUMENT_12',\n 'FLAG_DOCUMENT_13',\n 'FLAG_DOCUMENT_14',\n 'FLAG_DOCUMENT_15',\n 'FLAG_DOCUMENT_16',\n 'FLAG_DOCUMENT_17',\n 'FLAG_DOCUMENT_18',\n 'FLAG_DOCUMENT_19',\n 'FLAG_DOCUMENT_20',\n 'FLAG_DOCUMENT_21',\n 'AMT_REQ_CREDIT_BUREAU_HOUR',\n 'AMT_REQ_CREDIT_BUREAU_DAY',\n 'AMT_REQ_CREDIT_BUREAU_WEEK',\n 'AMT_REQ_CREDIT_BUREAU_MON',\n 'AMT_REQ_CREDIT_BUREAU_QRT',\n 'AMT_REQ_CREDIT_BUREAU_YEAR']"},"metadata":{}}]},{"cell_type":"code","source":"numerical_cols = [\"AMT_INCOME_TOTAL\",\n\"AMT_CREDIT\",\n\"AMT_ANNUITY\"\n\"AMT_GOODS_PRICE\"\n]\n\n\ndiscreet_cols = [\"CODE_GENDER\",\n\"FLAG_OWN_CAR\",\n\"FLAG_OWN_REALTY\",\n\"CNT_CHILDREN\", \n\"ORGANIZATION_TYPE\",\n\"OCCUPATION_TYPE\"\n]\n\nordinal_cols = ['DAYS_BIRTH']","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:51.818053Z","iopub.execute_input":"2024-08-26T01:35:51.818484Z","iopub.status.idle":"2024-08-26T01:35:51.828498Z","shell.execute_reply.started":"2024-08-26T01:35:51.818444Z","shell.execute_reply":"2024-08-26T01:35:51.827051Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"application['TARGET'].value_counts()/application.shape[0]","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:51.834493Z","iopub.execute_input":"2024-08-26T01:35:51.835331Z","iopub.status.idle":"2024-08-26T01:35:51.854421Z","shell.execute_reply.started":"2024-08-26T01:35:51.835283Z","shell.execute_reply":"2024-08-26T01:35:51.852874Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"TARGET\n0    0.919271\n1    0.080729\nName: count, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\n8% is the default rate ","metadata":{}},{"cell_type":"code","source":"application.groupby('NAME_CONTRACT_TYPE')['TARGET'].mean()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:51.856429Z","iopub.execute_input":"2024-08-26T01:35:51.856940Z","iopub.status.idle":"2024-08-26T01:35:51.911103Z","shell.execute_reply.started":"2024-08-26T01:35:51.856883Z","shell.execute_reply":"2024-08-26T01:35:51.909759Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"NAME_CONTRACT_TYPE\nCash loans         0.083459\nRevolving loans    0.054783\nName: TARGET, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\n*Common contract type is car loans with 8.3%*","metadata":{}},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nThe KDE plot shows two distinct peaks, suggesting a large  outliers  distribution for AMT_INCOME_TOTAL\n\n","metadata":{}},{"cell_type":"markdown","source":"### ***DECILE ANALYSIS***","metadata":{}},{"cell_type":"code","source":"application['TARGET'].mean()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.655039Z","iopub.execute_input":"2024-08-26T01:35:52.655487Z","iopub.status.idle":"2024-08-26T01:35:52.670712Z","shell.execute_reply.started":"2024-08-26T01:35:52.655445Z","shell.execute_reply":"2024-08-26T01:35:52.669105Z"},"trusted":true},"execution_count":27,"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0.08072881945686496"},"metadata":{}}]},{"cell_type":"code","source":"application_sample['amt_income_total_decile'] = pd.qcut(application_sample['AMT_INCOME_TOTAL'], 10, labels=False) + 1\n# Calculate the percentage of data in each decile\napplication_sample['amt_income_total_decile'].value_counts(normalize=True).sort_index()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.672597Z","iopub.execute_input":"2024-08-26T01:35:52.673145Z","iopub.status.idle":"2024-08-26T01:35:52.698015Z","shell.execute_reply.started":"2024-08-26T01:35:52.673090Z","shell.execute_reply":"2024-08-26T01:35:52.696593Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"amt_income_total_decile\n1     0.111212\n2     0.095929\n3     0.119277\n4     0.157778\n5     0.019121\n6     0.096774\n7     0.099961\n8     0.142625\n9     0.066988\n10    0.090336\nName: proportion, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\n\ndef average_target_by_decile(data, variable, ntiles=10):\n    \"\"\"\n    Calculates the average of TARGET variable by deciles of the specified variable.\n\n    Parameters:\n    data (pd.DataFrame): The DataFrame containing the data.\n    variable (str): The column name of the variable to create deciles.\n    ntiles (int): The number of ntiles to create. Default is 10.\n\n    Returns:\n    pd.DataFrame: A DataFrame with the average TARGET value for each decile.\n    \"\"\"\n    # Ensure the variable is numeric and remove any potential non-numeric values\n    data[variable] = pd.to_numeric(data[variable], errors='coerce')\n\n    # Create deciles for the specified variable\n    decile_column = f'{variable}_decile'\n    data[decile_column] = pd.qcut(data[variable], ntiles, labels=False) + 1\n\n    # Calculate the average of TARGET by deciles\n    decile_target_avg = data.groupby(decile_column)['TARGET'].mean().reset_index()\n\n    # Rename columns for clarity\n    decile_target_avg.columns = [decile_column, 'Average_TARGET']\n\n    return decile_target_avg","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.699353Z","iopub.execute_input":"2024-08-26T01:35:52.699730Z","iopub.status.idle":"2024-08-26T01:35:52.709148Z","shell.execute_reply.started":"2024-08-26T01:35:52.699690Z","shell.execute_reply":"2024-08-26T01:35:52.707489Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"decile_target_avg = average_target_by_decile(application_sample, 'AMT_INCOME_TOTAL')\ndecile_target_avg","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.710876Z","iopub.execute_input":"2024-08-26T01:35:52.712170Z","iopub.status.idle":"2024-08-26T01:35:52.740781Z","shell.execute_reply.started":"2024-08-26T01:35:52.712108Z","shell.execute_reply":"2024-08-26T01:35:52.739617Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"   AMT_INCOME_TOTAL_decile  Average_TARGET\n0                        1        0.083626\n1                        2        0.080678\n2                        3        0.095420\n3                        4        0.092333\n4                        5        0.098639\n5                        6        0.080645\n6                        7        0.075472\n7                        8        0.086639\n8                        9        0.062136\n9                       10        0.053276","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AMT_INCOME_TOTAL_decile</th>\n      <th>Average_TARGET</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0.083626</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>0.080678</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>0.095420</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>0.092333</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>0.098639</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6</td>\n      <td>0.080645</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7</td>\n      <td>0.075472</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8</td>\n      <td>0.086639</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9</td>\n      <td>0.062136</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10</td>\n      <td>0.053276</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nHigher amounts  has less risk and risk is  higher in medium income 25% of the total data to be exact. ","metadata":{}},{"cell_type":"code","source":"decile_target_avg = average_target_by_decile(application_sample, 'AMT_ANNUITY')\n#decile_target_avg.to_clipboard()\ndecile_target_avg","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.742360Z","iopub.execute_input":"2024-08-26T01:35:52.742754Z","iopub.status.idle":"2024-08-26T01:35:52.766160Z","shell.execute_reply.started":"2024-08-26T01:35:52.742712Z","shell.execute_reply":"2024-08-26T01:35:52.764679Z"},"trusted":true},"execution_count":31,"outputs":[{"execution_count":31,"output_type":"execute_result","data":{"text/plain":"   AMT_ANNUITY_decile  Average_TARGET\n0                 1.0        0.066970\n1                 2.0        0.077955\n2                 3.0        0.079470\n3                 4.0        0.079375\n4                 5.0        0.074675\n5                 6.0        0.102932\n6                 7.0        0.107282\n7                 8.0        0.093689\n8                 9.0        0.078074\n9                10.0        0.055267","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>AMT_ANNUITY_decile</th>\n      <th>Average_TARGET</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1.0</td>\n      <td>0.066970</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2.0</td>\n      <td>0.077955</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3.0</td>\n      <td>0.079470</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.0</td>\n      <td>0.079375</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>0.074675</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>6.0</td>\n      <td>0.102932</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>7.0</td>\n      <td>0.107282</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>8.0</td>\n      <td>0.093689</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>9.0</td>\n      <td>0.078074</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>10.0</td>\n      <td>0.055267</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nLess default when EMI is Less and Risk increases with increse in EMI and then risk decreases with 90th percentile EMI amount ","metadata":{}},{"cell_type":"code","source":"# Create deciles for 'AMT_INCOME_TOTAL' and 'AMT_CREDIT'\napplication['amt_income_total_decile'] = pd.qcut(application['AMT_INCOME_TOTAL'], 5, labels=False) + 1\napplication['amt_credit_decile'] = pd.qcut(application['AMT_CREDIT'], 5, labels=False) + 1\n\n# 1. Pivot of total defaults (Expressed as overall %) (TARGET)\npivot_total_defaults = pd.crosstab(application['amt_credit_decile'], application['amt_income_total_decile'], \n                                   values=application['TARGET'], aggfunc='sum', normalize='all')\n\n# 2. % of default group by AMT_CREDIT (TARGET)\ndefault_by_amt_credit = application.groupby('amt_credit_decile')['TARGET'].mean()\n\n# 3. Pivot of row wise percentage (TARGET)\npivot_row_wise_percentage = pd.crosstab(application['amt_credit_decile'], application['amt_income_total_decile'], \n                                        values=application['TARGET'], aggfunc='mean')\n\n# 4. Pivot of column wise percentage (TARGET)\noverall_data_percent = pd.crosstab(application['amt_credit_decile'], application['amt_income_total_decile'], \n                                           values=application['TARGET'], aggfunc='count', normalize = 'all')\n\n# Display the results\n\n#pivot_total_defaults\n\n\ndefault_by_amt_credit\n\n\npivot_row_wise_percentage\n\n#overall_data_percent.to_clipboard()\noverall_data_percent","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.768176Z","iopub.execute_input":"2024-08-26T01:35:52.768665Z","iopub.status.idle":"2024-08-26T01:35:52.931439Z","shell.execute_reply.started":"2024-08-26T01:35:52.768610Z","shell.execute_reply":"2024-08-26T01:35:52.930034Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"amt_credit_decile\n1    0.072376\n2    0.091724\n3    0.100549\n4    0.078549\n5    0.060752\nName: TARGET, dtype: float64"},"metadata":{}},{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"amt_income_total_decile         1         2         3         4         5\namt_credit_decile                                                        \n1                        0.067896  0.076397  0.075269  0.076515  0.066159\n2                        0.099467  0.093576  0.092547  0.083670  0.077269\n3                        0.096522  0.105216  0.109148  0.100848  0.086663\n4                        0.080878  0.078877  0.081294  0.082100  0.069348\n5                        0.073884  0.068079  0.070049  0.061794  0.050215","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>amt_income_total_decile</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n    </tr>\n    <tr>\n      <th>amt_credit_decile</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.067896</td>\n      <td>0.076397</td>\n      <td>0.075269</td>\n      <td>0.076515</td>\n      <td>0.066159</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.099467</td>\n      <td>0.093576</td>\n      <td>0.092547</td>\n      <td>0.083670</td>\n      <td>0.077269</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.096522</td>\n      <td>0.105216</td>\n      <td>0.109148</td>\n      <td>0.100848</td>\n      <td>0.086663</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.080878</td>\n      <td>0.078877</td>\n      <td>0.081294</td>\n      <td>0.082100</td>\n      <td>0.069348</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.073884</td>\n      <td>0.068079</td>\n      <td>0.070049</td>\n      <td>0.061794</td>\n      <td>0.050215</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"amt_income_total_decile         1         2         3         4         5\namt_credit_decile                                                        \n1                        0.085877  0.066616  0.019355  0.029453  0.009831\n2                        0.048190  0.066063  0.022383  0.037817  0.014478\n3                        0.034500  0.057487  0.026695  0.054463  0.027017\n4                        0.027703  0.054792  0.025641  0.060206  0.039859\n5                        0.010783  0.033914  0.021216  0.063624  0.062040","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>amt_income_total_decile</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n    </tr>\n    <tr>\n      <th>amt_credit_decile</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>0.085877</td>\n      <td>0.066616</td>\n      <td>0.019355</td>\n      <td>0.029453</td>\n      <td>0.009831</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.048190</td>\n      <td>0.066063</td>\n      <td>0.022383</td>\n      <td>0.037817</td>\n      <td>0.014478</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.034500</td>\n      <td>0.057487</td>\n      <td>0.026695</td>\n      <td>0.054463</td>\n      <td>0.027017</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.027703</td>\n      <td>0.054792</td>\n      <td>0.025641</td>\n      <td>0.060206</td>\n      <td>0.039859</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>0.010783</td>\n      <td>0.033914</td>\n      <td>0.021216</td>\n      <td>0.063624</td>\n      <td>0.062040</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nPeople with high incomes and medium credit amounts have lower default rate\n\nLow Income and Very Low credit Amount have higher default rate\n","metadata":{}},{"cell_type":"code","source":"\n\ndef analyze_continous_vars(application, variable1, variable2):\n    application['amt_income_total_decile'] = pd.qcut(application[variable1], 5, labels=False) + 1\n    application['AMT_ANNUITY_decile'] = pd.qcut(application[variable2], 5, labels=False) + 1\n\n    # Pivot of total defaults (Expressed as overall %) (TARGET)\n    pivot_total_defaults = pd.crosstab(application['AMT_ANNUITY_decile'], application['amt_income_total_decile'], \n                                       values=application['TARGET'], aggfunc='sum', normalize='all')\n\n    # % of default group by AMT_CREDIT (TARGET)\n    default_by_amt_credit = application.groupby('AMT_ANNUITY_decile')['TARGET'].mean()\n\n    # Pivot of row wise percentage (TARGET)\n    pivot_row_wise_percentage = pd.crosstab(application['AMT_ANNUITY_decile'], application['amt_income_total_decile'], \n                                            values=application['TARGET'], aggfunc='mean')\n\n    # Pivot of column wise percentage (TARGET)\n    overall_data_percent = pd.crosstab(application['AMT_ANNUITY_decile'], application['amt_income_total_decile'], \n                                       values=application['TARGET'], aggfunc='count', normalize='all')\n\n    # Display the results\n    return pivot_total_defaults, default_by_amt_credit, pivot_row_wise_percentage, overall_data_percent\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.933158Z","iopub.execute_input":"2024-08-26T01:35:52.933579Z","iopub.status.idle":"2024-08-26T01:35:52.944756Z","shell.execute_reply.started":"2024-08-26T01:35:52.933537Z","shell.execute_reply":"2024-08-26T01:35:52.942929Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"\npivot_total_defaults, default_by_amt_credit, pivot_row_wise_percentage, overall_data_percent = analyze_continous_vars(application, 'AMT_INCOME_TOTAL', 'AMT_ANNUITY')\n#pivot_total_defaults\ndefault_by_amt_credit\npivot_row_wise_percentage\n#overall_data_percent.to_clipboard()\noverall_data_percent","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:52.952030Z","iopub.execute_input":"2024-08-26T01:35:52.952513Z","iopub.status.idle":"2024-08-26T01:35:53.114002Z","shell.execute_reply.started":"2024-08-26T01:35:52.952470Z","shell.execute_reply":"2024-08-26T01:35:53.112538Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"AMT_ANNUITY_decile\n1.0    0.069488\n2.0    0.085830\n3.0    0.087911\n4.0    0.093390\n5.0    0.067042\nName: TARGET, dtype: float64"},"metadata":{}},{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"amt_income_total_decile         1         2         3         4         5\nAMT_ANNUITY_decile                                                       \n1.0                      0.068611  0.073131  0.066339  0.069529  0.057845\n2.0                      0.087888  0.085708  0.090459  0.082515  0.078734\n3.0                      0.094761  0.089709  0.086411  0.086651  0.075388\n4.0                      0.099855  0.100036  0.106370  0.090576  0.075011\n5.0                      0.078596  0.079355  0.075062  0.070191  0.055924","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>amt_income_total_decile</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n    </tr>\n    <tr>\n      <th>AMT_ANNUITY_decile</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1.0</th>\n      <td>0.068611</td>\n      <td>0.073131</td>\n      <td>0.066339</td>\n      <td>0.069529</td>\n      <td>0.057845</td>\n    </tr>\n    <tr>\n      <th>2.0</th>\n      <td>0.087888</td>\n      <td>0.085708</td>\n      <td>0.090459</td>\n      <td>0.082515</td>\n      <td>0.078734</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.094761</td>\n      <td>0.089709</td>\n      <td>0.086411</td>\n      <td>0.086651</td>\n      <td>0.075388</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.099855</td>\n      <td>0.100036</td>\n      <td>0.106370</td>\n      <td>0.090576</td>\n      <td>0.075011</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.078596</td>\n      <td>0.079355</td>\n      <td>0.075062</td>\n      <td>0.070191</td>\n      <td>0.055924</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"amt_income_total_decile         1         2         3         4         5\nAMT_ANNUITY_decile                                                       \n1.0                      0.085317  0.062612  0.017207  0.026286  0.008602\n2.0                      0.057353  0.069626  0.022972  0.036771  0.013259\n3.0                      0.037613  0.063548  0.027210  0.050478  0.021353\n4.0                      0.020192  0.053672  0.027057  0.062940  0.035984\n5.0                      0.006579  0.029424  0.020839  0.069080  0.074026","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>amt_income_total_decile</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n    </tr>\n    <tr>\n      <th>AMT_ANNUITY_decile</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1.0</th>\n      <td>0.085317</td>\n      <td>0.062612</td>\n      <td>0.017207</td>\n      <td>0.026286</td>\n      <td>0.008602</td>\n    </tr>\n    <tr>\n      <th>2.0</th>\n      <td>0.057353</td>\n      <td>0.069626</td>\n      <td>0.022972</td>\n      <td>0.036771</td>\n      <td>0.013259</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.037613</td>\n      <td>0.063548</td>\n      <td>0.027210</td>\n      <td>0.050478</td>\n      <td>0.021353</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.020192</td>\n      <td>0.053672</td>\n      <td>0.027057</td>\n      <td>0.062940</td>\n      <td>0.035984</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.006579</td>\n      <td>0.029424</td>\n      <td>0.020839</td>\n      <td>0.069080</td>\n      <td>0.074026</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nHigh EMI and Medium Income have more Defaults\n\nMedium EMI and Low Income has more Defaults\n\nhigh EMI and Low income has more Defaults\n\nHigh income groups generally have low Defaults","metadata":{}},{"cell_type":"markdown","source":"#### **Box Plot on Application Dataset**","metadata":{}},{"cell_type":"code","source":"# Plot box plot of 'AMT_CREDIT' split by 'TARGET' variable\nplt.figure(figsize=(12, 8))\nsns.boxplot(data=application_sample, x='TARGET', y='AMT_CREDIT')\nplt.title('Box Plot of AMT_CREDIT by TARGET', fontsize=16)\nplt.xlabel('TARGET', fontsize=14)\nplt.ylabel('AMT_CREDIT', fontsize=14)\nplt.grid(True)\nplt.show()\n\n# Plot box plot of 'AMT_INCOME_TOTAL' split by 'TARGET' variable\nplt.figure(figsize=(12, 8))\nsns.boxplot(data=application_sample, x='TARGET', y='AMT_INCOME_TOTAL')\nplt.title('Box Plot of AMT_INCOME_TOTAL by TARGET', fontsize=16)\nplt.xlabel('TARGET', fontsize=14)\nplt.ylabel('AMT_INCOME_TOTAL', fontsize=14)\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:53.115478Z","iopub.execute_input":"2024-08-26T01:35:53.115856Z","iopub.status.idle":"2024-08-26T01:35:53.803628Z","shell.execute_reply.started":"2024-08-26T01:35:53.115814Z","shell.execute_reply":"2024-08-26T01:35:53.802232Z"},"trusted":true},"execution_count":35,"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<Figure size 1200x800 with 0 Axes>"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='TARGET', ylabel='AMT_CREDIT'>"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Box Plot of AMT_CREDIT by TARGET')"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'TARGET')"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'AMT_CREDIT')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":""},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<Figure size 1200x800 with 0 Axes>"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='TARGET', ylabel='AMT_INCOME_TOTAL'>"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Box Plot of AMT_INCOME_TOTAL by TARGET')"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'TARGET')"},"metadata":{}},{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'AMT_INCOME_TOTAL')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":"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CxcupGhz9epVa86cOVbVqlWt0NDQZPOSvt8lWYcOHXLpNTqT3s8aAHPQVR6A8fz9/fX6669LUobPROamBg0aOM4Ef/XVV3fskpnXHD16VJJUrVq1TK1nzpw5kqTBgweradOmunHjhubPn3/H5UqXLq2OHTvqjz/+0LZt25zWFxERocDAQD3wwAOZqjG7DR48WJI0fPhwl7rdJomIiNC4ceMkSUuWLNGQIUPk7e2dol3Dhg317bffpuiZ0KtXL124cEENGzbU6tWrVaFChWTzCxQooAkTJmjo0KFKTExU7969U710pWbNmqpTp47Wr1+vkydPppj/ww8/6K+//lLnzp1VvHhxl1+jKWbNmqXly5fL09NT69atU4cOHVK0adu2rdavXy9PT0999dVXjs92Vti6dav27t2r4sWLO874f/7554qLi8uybdztjh07pvDwcLm7u2vp0qWy2Wxas2aNTp06le512Ww2vf7667rvvvskyeklPnv27HHs2x9//LHGjRvn9LNfoEAB9e3bV7/++qvat2+f7loA3N0I7gDyhKRuqqmF3qtXr+qDDz5QnTp1VLhwYfn6+urBBx/UiBEj9Pfffydr++WXXzquwz1+/HiKda1fv17u7u4qWrSo9u3blyX1J12HGhsbm+Z1wre6cOGC3nrrLT344IPy9fVV4cKFVbduXY0fP17Xrl1L1rZ3796qXLmyJOnIkSMprltMj/Xr16tDhw4qU6aMvLy8VLZsWXXr1k0///xzsnZJ11Amdcf87LPPMrzNw4cPKyIiQh4eHgoKClK/fv0kyRFM7qRv376ptp87d64SExMdbUz2/PPPq2rVqoqKitKiRYtcXi7pmv1OnTrpySefTLOtzWbTI4884nj+/fffa+vWrZKkqVOnOg38Sd59912VKVNGly5d0tSpU1Nt17dvXyUkJOizzz5LMS/p3ygv/HvczrIshYaGSpJeeOEF1atXL9W2tWvX1osvvihJev/999P1Q0xaZs+eLUl65pln1KpVK1WtWlUXLlzQ8uXLs2T96XHkyBEFBQXpnnvukY+Pj6pXr6633347xffT6NGjZbPZNGDAgFTXtX37dtlsNpUrVy7bf9wMCwtTYmKi2rZtq8aNG6tFixapfl5dYbPZ9I9//EPSzW73txs3bpzsdrvq1KmjV1555Y7rK1CggP7v//4vQ7UAuHsR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vb1T7PN9+/bVmjVrNG/ePI0aNSpHejO0bt3aacju0KGDSpYsqfPnz2vXrl2O79z69eurUaNGioyM1Pr16x23IktMTHT0LLm1F1F2OH/+vKP30+0/5vXt21fTp093fF4LFy7sdB1jxoxJ1psgSWhoqN58880M1bVq1SpHb44kFStWdPyYeru0bgd3+8CSAO4eBHcARunfv3+K4Hjjxg2NGjVKoaGhatq0qf7880/HH1UnTpyQJMfAbM5UqVIlWdtbderUSf3799esWbMkSTNnzszUfeJvDRo2m02FChVS9erV1aFDhzRrvJWrr2n37t1OX1NGnD9/3nF2LLXtpvU+ZtTZs2cd10o7Oyvet29fhYSEKCws7I7BPan9Dz/8oLlz58rf31/Xr1939OLIaz744AOFh4dr0qRJevnll1M9I37rWbwzZ84oICAgXdtJuhe6s0G1nDlz5oykmz9GJZ1NdsZms6l3794aM2aMlixZor1790pKX++HpMs+TJH0Xl24cEE3bty441n3GzduOHolpHa21VVJZ4KdjcbfqVMnlSpVSkeOHFFERESKHjPZIa3vp0qVKun8+fMpegQNGjRIkZGRmjp1qiO4r169WkeOHFHt2rWT/bCaHRYuXKi4uDind5ioW7euHnroIf36669avHixnnvuOafruPU+7hcuXNBPP/2ks2fPatSoUXrggQdSdJVP+sxIN7/vkkafv9Wtl1Fs2bIl2eCRzkycONHlH78A3D3oKn+bzZs3q2PHjipbtqxsNpvjl9n0WL9+vRo2bKjChQurdOnSeuqpp5INjAUgfTw8PDR27FiVKlVKp06dcukWYa46f/681q5d63j+008/ZWp9t15fPnfuXP373//WK6+84nJoz28WLFggu90uDw8P9e/fX02aNEn2SBrl+ccff3QEv7Q8/fTTKly4sD777DPNnj1bbm5uGRqwzQS1a9dW9+7dFRsbm+YZ99q1azvOsO7YsSPd20kakM7ZrfScSbqWt2bNmncMrkk/msycOVMLFixQ0aJFU3QlzkuS3qv4+Hj98ssvd2wfFRUlu92ebNmMiI+P18KFCyXd/De+fT9p3ry5EhISJKWvq3d2u723QZcuXVSuXDmtXbvWMchf0qB02X22Xfrfe3P8+PEU72GTJk0clzOk9R527tzZ8R3/9ddf69ixY+rZs6fsdruCgoJS3FKuUqVKjh+4smKcAwD5F8H9NrGxsapZs6bjQJJehw4d0hNPPKEWLVooKipK69ev17lz5/L0HyqACdzc3BxnGPbs2eOYXq5cOUk3R21OTdK8pLZJLMtSr169dPz4cXXu3FklSpTQRx99lOZo2TkhM68po0qWLOm4PCC17Wb1NqX//YGc1FX/9sfu3btTtE1LwYIF1bVrVx07dkxRUVFq3bq1ypcvn2X15rSxY8fKy8tLs2bN0v79+522KV68uOMMXUZuZ/XEE09Ikv773/+m6K57u+vXr2vp0qWSUg7C5UzFihXVokULbd++XadPn1aPHj2SXROd19SsWdPxPeTKD4hJbSpVqpSp23utXLnSca30wYMHne4rSXeZWLFiRZpjD2SVpODtTNLJitv3PQ8PD7344otKTEzU9OnT9ddffyk8PFwlSpRQjx49srNc7dixQ7/99pukm72GnL2HSaF727ZtjkE478Tb21tz5sxRtWrVdOnSJY0cOTLZfDc3N8fYHUk/vgBARhDcb9O2bVuNHTs21fvgxsXFaejQoSpXrpwKFiyowMBAx/Wo0s0RZxMSEjR27FhVqVJFderU0dChQ5P96g4g/RITEx1/DN56bd+jjz4qNzc3RUVFJQt5SU6dOqV169ZJkpo3b55s3gcffKC1a9eqRo0aWrhwoeM+5L17987R0Zlv16xZM0k3R3l31n35l19+UVRUlNzc3JJdu500enVG7oHs4eGhJk2aSFKqXZOTBhm7/X3MqMjISP33v/+Vt7e3/v77b1mW5fSxZs0aSTfPzrvy2vr376+SJUuqZMmSqXZ3zSvuvfdeDRgwQHa7Xf/6179SbZc07+uvv77j/bwty9KWLVscz5s3b66GDRtKkl5++WXFxcWluuzIkSN19uxZFSlSRC+//LJLr+H55593/Hu4crmDyWw2m+M65k8//TTNM6i//PKL49rt4cOHZ+pyjaRxIIYNG5bqfmJZlho0aKC4uLgcCYgbNmxwXDZxqzVr1uj8+fMqXLiw014GAwYMkI+Pj8LCwvThhx/Ksiz169cv23/QSXoPu3XrluZ7mHQ3kfT0XPDx8dG4ceMk3fz+vP1HtjfffFMeHh7auXOnpk+fnkWvCEB+Q3BPp4EDByoyMlKLFy/Wr7/+qqefflqPP/649u3bJ+lmVzg3NzfNnTtXCQkJunTpkhYsWKCWLVs6Ri8FkD43btzQiBEjHGecbj3TV6FCBT399NOyLEsDBgzQ+fPnHfNiY2P1/PPP6/r162rcuHGy6yc3b96skSNHytfXV8uWLVPBggXVoUMHDRkyRH///be6du2aaz+2NWnSRIGBgbp27ZoGDBigq1evOuadO3dOAwYMkCR179492fXMpUuXlpeXl6KjozN0xm3IkCGSbo76HBERkWxeUrdQT09Px+jQmZX0h/ETTzyhYsWKpdouaRCs06dPa/Xq1Xdcb8OGDXXu3Lm7prfTiBEjVLhwYS1btkwnT5502qZVq1aOf7/u3btr0qRJTgP4zp071aZNmxSDXi1cuFDFihXTtm3b1KFDBx07dizZ/GvXrumNN97QxIkTZbPZFBYW5vI12127dnX8e9SrV8+lZUz2/PPPq1OnTrLb7Xr88cedfibXrVunNm3ayG63q1OnTpn6Aeno0aP69ttvJemOl30k3Tc+J+7pfu3aNb344ou6du2aY9rJkycdn8MXXnhBPj4+KZYrVaqUevbsqQsXLmjmzJlyc3PTSy+9lK21Xr16VYsXL5bk+nu4cOHCdB0DnnzySQUGBiohISHF4HUPPPCAPvroI0k3/4586623nN7PPiEhIdOXawG4ezE4XTocPXpUc+fO1dGjR1W2bFlJ0tChQ7Vu3TrNnTtX77//vipXrqwNGzaoa9euGjBggBISEtSoUSPHGSMAaZs9e3ayXiznz5/X7t27HUHiX//6V4oBjKZNm6a9e/dq27ZtqlKlipo3by4PDw99//33Onv2rCpXrqzPP//c0f7s2bPq0aOHEhISNG3aND344IOOee+//762bNmin376SW+88Ybjj62ctmjRIrVo0UIrV65U5cqV9eijj8put2vjxo2KiYlRnTp1NHXq1GTLeHp6qlOnTvryyy9Vq1YtNWnSRL6+vpL+d7YpLW3bttWIESM0duxYtWrVSg8//LAqVKigvXv3ateuXXJ3d9eMGTOSvV8ZdeXKFS1ZskTSnf+Qdnd3V8+ePTVp0iTNmTNHnTt3zvT285IyZcpoyJAhevvtt5OFpNtNnDhRJUqU0Ntvv+1oHxgYqDJlyujKlSv69ddfHb1Whg0blmzZKlWqaMuWLXriiSf07bff6t5771XDhg0VEBCgixcvauvWrYqJiVGhQoUUFhamp556KjtfssO5c+dSvctBkunTpzs+5znBZrNp6dKlGjBggD777DN17NhRVatWVc2aNWWz2bR7927Hj/m9evXSrFmzMnW2fe7cuUpMTFT9+vVVo0aNNNt2795dISEh2r17t3bu3JnijPe7777r6AXgzPTp01WnTh2X6goKCtLq1at177336pFHHtH169f13XffKTY2Vo0aNXI68nqSQYMGOX5caN++fbYPtLZs2TLFxMTI399frVu3TrNtmzZt5Ofnp9OnT+vrr79O12c9NDRULVq00BdffKERI0YkG4hu4MCBKly4sAYOHKjQ0FB9+OGHqlu3rsqXLy9PT0+dPXtWO3fu1IULF+Tl5ZXm3UKGDh2a6qjy0s3319V/RwB5iIVUSbKWL1/ueL569WpLklWwYMFkDw8PD6tr166WZVnWqVOnrGrVqlmvv/66tWvXLuv777+3mjZtaj322GNWYmJiLr0SwHwVK1a0JKV4eHl5WRUrVrS6detmbdy4MdXlY2NjrdDQUKtWrVqWr6+v5ePjY9WoUcN66623rAsXLjjaJSQkWK1bt7YkWcHBwU7XdeTIEatEiRIpvgPSMnfuXEuSVbFiRddftGU5Xqcz58+ft4YPH27VqFHD8vHxsXx9fa3atWtbH3zwgXX16tVUlxkwYIBVoUIFy9PTM831p2bt2rVWu3btrJIlS1oeHh6Wv7+/9fTTT1vbtm1z2j7ptaf2fjozZ84cS5Ll7+9v3bhx447to6KiLEmWu7u7deLEiWTbfeyxx1zebnBwsCXJevfdd11ql57XdCejR4+2JFlNmzZNMS/p3+nYsWNOl718+bLl5+fnaJfWvnD48GFr+PDhVv369R3/hkWLFrVq165tDR482Nq1a1eqy8bFxVmffvqp1bp1a8vPz8/y9PS0ihcvbtWrV88aNWqUdebMmTu+vn79+qXa5nZNmza1JFkLFixINj3p39aVx99//+3y9lypZfTo0S4vs3XrVqtPnz5WlSpVLF9fX6tAgQLWvffea/Xu3dvasmWLy+tJ7bORmJjo+G6cOnWqS+vq3LmzJcl68cUXHdNS+369/ZHW5+r2WkePHm0dPHjQ6tGjh+Xn52d5eXlZVatWtUaNGmXFxsbecT3+/v6WJGv9+vUuva47Ses7+JFHHrEkWUOHDnVpXa+++qolyWrbtq1jmqufjzZt2liSrO7duzudf/78eWvcuHFWixYtLH9/f8vLy8sqUKCAFRAQYLVr186aNGmSdfLkyRTLHTp0yOV9Iq3jVlrfQwDMZrOsLLrB6F3IZrNp+fLljrM7S5Ys0TPPPKM//vhD7u7uydoWKlRI/v7+GjlypNatW5dsZN/jx48rICBAkZGRjusIAQAA8qNvv/1WrVq10n333ac9e/bkyds1AkBOo6t8OtSuXVsJCQk6c+ZMqvfYvHr1quO2PEmSQn5iYmK21wgAAGCqhIQEjR49WpIUEhJCaAcAFxHcb3PlypVko4EeOnRIUVFRKlGihKpXr65nnnlGQUFB+vDDD1W7dm2dPXtWEREReuihh9S+fXu1b99eH330kd555x316NFDly9f1ltvvaWKFSuqdu3aufjKAAAAcsfcuXO1efNm/fzzz/r999/1f//3f+rbt29ulwUAeQZd5W+zadMmp7c6Cg4O1rx582S32zV27FjNnz9fJ06cUKlSpdSwYUONGTPGcY/WxYsXa/z48frrr7/k6+urRo0aady4cbr//vtz+uUAALLB0KFDHXc5uJMmTZqof//+2VxR/vbBBx9o7969LrW9//77Hbd0Q87p3bu3PvvsMxUrVkzNmzfX5MmTVaFChdwuCwDyDII7AADpVKlSJR05csSltkk//CL7NGvWTN9//71LbZs2bZrszhUAAOQFBHcAAAAAAAzmducmAAAAAAAgtzA4nW6O9n7y5EkVLlyY0U0BAAAAANnOsixdvnxZZcuWTXFnstsR3CWdPHlSAQEBuV0GAAAAACCfOXbsmMqXL59mG4K7pMKFC0u6+YYVKVIkl6sBcDu73a4NGzaodevW8vT0zO1yAADIMziGAuaKiYlRQECAI4+mheAuObrHFylShOAOGMhut8vX11dFihThjw4AANKBYyhgPlcu12ZwOgAAAAAADEZwBwAAAADAYAR3AAAAAAAMRnAHAAAAAMBgBHcAAAAAAAxGcAcAAAAAwGDGBffNmzerY8eOKlu2rGw2m1asWJFm+6+++kqtWrVS6dKlVaRIETVq1Ejr16/PmWIBAAAAAMhmxgX32NhY1axZU9OmTXOp/ebNm9WqVSutWbNGO3fuVPPmzdWxY0f98ssv2VwpAAAAAADZzyO3C7hd27Zt1bZtW5fbT548Odnz999/XytXrtSqVatUu3btLK4OAAAAAICcZVxwz6zExERdvnxZJUqUSLVNXFyc4uLiHM9jYmIkSXa7XXa7PdtrBJA+Sfsl+ycAAOnDMRQwV3r2y7suuE+cOFFXrlxR165dU20TGhqqMWPGpJi+YcMG+fr6Zmd5ADIhPDw8t0sAACBP4hgKmOfq1asut7VZlmVlYy2ZYrPZtHz5cnXu3Nml9osWLdJzzz2nlStXqmXLlqm2c3bGPSAgQOfOnVORIkUyWzaALGa32xUeHq5WrVrJ09Mzt8sBACDP4BgKmCsmJkalSpXSpUuX7phD75oz7osXL1b//v21bNmyNEO7JHl7e8vb2zvFdE9PT77QAIOxjwIAkDEcQwHzpGefNG5U+Yz44osv1KdPH33xxRdq3759bpcDAAAAAECWMe6M+5UrV7R//37H80OHDikqKkolSpRQhQoVNHz4cJ04cULz58+XdLN7fHBwsD7++GMFBgYqOjpaklSgQAEVLVo0V14DAAAAAABZxbgz7j///LNq167tuJVbSEiIateurVGjRkmSTp06paNHjzraz5w5Uzdu3NDLL7+se+65x/EYPHhwrtQPAAAAAEBWMu6Me7NmzZTWeHnz5s1L9nzTpk3ZWxAAAAAAALnIuDPuAAAAAADgfwjuAAAAAAAYjOAOAAAAAIDBCO4AAADAXSoyMlKzZ89WZGRkbpcCIBMI7gAAAMBd6Pr165oyZYouX76sKVOm6Pr167ldEoAMIrgDAAAAd6HPP/9c58+flySdP39eixYtyuWKAGQUwR0AAAC4yxw/flyLFi1y3GbZsiwtWrRIx48fz+XKAGQEwR0AAAC4i1iWpY8//jjV6UlhHkDeQXAHAAAA7iJHjx7Vjh07lJCQkGx6QkKCduzYoaNHj+ZSZQAyiuAOAAAA3EUqVKig+vXry93dPdl0d3d3NWjQQBUqVMilygBkFMEdAAAAuIvYbDYNHjw41ek2my0XqgKQGQR3AAAA4C5Tvnx59ezZ0xHSbTabevbsqXLlyuVyZQAyguAOAAAA3IWeeeYZlSxZUpJUsmRJ9ezZM5crApBRBHcAAADgLuTj46NBgwapcOHCGjRokHx8fHK7JAAZRHAHAAAA7lKNGjVS//791ahRo9wuBUAmENwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxkX3Ddv3qyOHTuqbNmystlsWrFixR2X2bRpk+rUqSNvb29VrVpV8+bNy/Y6AQAAAADICcYF99jYWNWsWVPTpk1zqf2hQ4fUvn17NW/eXFFRUXr11VfVv39/rV+/PpsrBQAAAAAg+3nkdgG3a9u2rdq2bety+xkzZqhy5cr68MMPJUk1atTQli1b9NFHH6lNmzbZVSYAAAAAADnCuOCeXpGRkWrZsmWyaW3atNGrr76a6jJxcXGKi4tzPI+JiZEk2e122e32bKkTQMYl7ZfsnwAApA/HUMBc6dkv83xwj46Olp+fX7Jpfn5+iomJ0bVr11SgQIEUy4SGhmrMmDEppm/YsEG+vr7ZViuAzAkPD8/tEgAAyJM4hgLmuXr1qstt83xwz4jhw4crJCTE8TwmJkYBAQFq3bq1ihQpkouVAXDGbrcrPDxcrVq1kqenZ26XAwBAnsExFDBXUs9vV+T54O7v76/Tp08nm3b69GkVKVLE6dl2SfL29pa3t3eK6Z6ennyhAQZjHwUAIGM4hgLmSc8+adyo8unVqFEjRUREJJsWHh6uRo0a5VJFAAAAAABkHeOC+5UrVxQVFaWoqChJN2/3FhUVpaNHj0q62c09KCjI0f6FF17QwYMH9cYbb2jv3r2aPn26li5dqtdeey03ygcAAAAAIEsZF9x//vln1a5dW7Vr15YkhYSEqHbt2ho1apQk6dSpU44QL0mVK1fWN998o/DwcNWsWVMffvihZs+eza3gAAAAAAB3BeOucW/WrJksy0p1/rx585wu88svv2RjVQAAAAAA5A7jzrgDAAAAAID/IbgDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGMzK4T5s2TZUqVZKPj48CAwO1ffv2NNtPnjxZ9913nwoUKKCAgAC99tprun79eg5VCwAAAABA9jEuuC9ZskQhISEaPXq0du3apZo1a6pNmzY6c+aM0/aLFi3Sm2++qdGjR2vPnj2aM2eOlixZorfeeiuHKwcAAAAAIOsZF9wnTZqk5557Tn369NEDDzygGTNmyNfXV2FhYU7b//jjj3r44YfVs2dPVapUSa1bt1aPHj3ueJYeAAAAAIC8wCO3C7hVfHy8du7cqeHDhzumubm5qWXLloqMjHS6TOPGjbVw4UJt375dDRo00MGDB7VmzRr16tUr1e3ExcUpLi7O8TwmJkaSZLfbZbfbs+jVAMgqSfsl+ycAAOnDMRQwV3r2S6OC+7lz55SQkCA/P79k0/38/LR3716ny/Ts2VPnzp1TkyZNZFmWbty4oRdeeCHNrvKhoaEaM2ZMiukbNmyQr69v5l4EgGwTHh6e2yUAAJAncQwFzHP16lWX2xoV3DNi06ZNev/99zV9+nQFBgZq//79Gjx4sN59912NHDnS6TLDhw9XSEiI43lMTIwCAgLUunVrFSlSJKdKB+Aiu92u8PBwtWrVSp6enrldDgAAeQbHUMBcST2/XWFUcC9VqpTc3d11+vTpZNNPnz4tf39/p8uMHDlSvXr1Uv/+/SVJ//d//6fY2Fg9//zz+te//iU3t5SX8Xt7e8vb2zvFdE9PT77QAIOxjwIAkDEcQwHzpGefNGpwOi8vL9WtW1cRERGOaYmJiYqIiFCjRo2cLnP16tUU4dzd3V2SZFlW9hULAAAAAEAOyJbg3qdPH3l4ZOxkfkhIiGbNmqXPPvtMe/bs0YsvvqjY2Fj16dNHkhQUFJRs8LqOHTvqk08+0eLFi3Xo0CGFh4dr5MiR6tixoyPAAwAAAACQV2VbV/mMnu3u1q2bzp49q1GjRik6Olq1atXSunXrHAPWHT16NNkZ9hEjRshms2nEiBE6ceKESpcurY4dO+q9997LktcBAAAAAEBuMuoa9yQDBw7UwIEDnc7btGlTsuceHh4aPXq0Ro8enQOVAQAAAACQs4y6xh0AAAAAACRHcAcAAAAAwGAEdwAAAAAADEZwBwAAAADAYC4NTufr65uuldrt9gwVAwAAAAAAknMpuJcpU0Y2my27awEAAAAAALdxKbgfPnw4m8sAAAAAAADOcI07AAAAAAAGy/LgfubMGU2YMEEPPPBAVq8aAAAAAIB8x6Wu8neSmJioNWvWaM6cOVqzZo3sdjvXxAMAAAAAkAUyFdz37dunsLAwzZ8/X9HR0bIsS+XLl1dQUJB69+6dRSUCAAAAAJB/pTu4X7t2TcuWLdOcOXO0ZcsWWZYlHx8fWZalLl26aMmSJZxtBwAAAAAgi7gc3Hfs2KE5c+Zo8eLFunz5siTp4YcfVlBQkJ5++mkVL15cxYoVI7QDAAAAAJCFXAruDz30kP744w9ZlqWqVatqyJAhevbZZ1W5cuXsrg8AAAAAgHzNpeD++++/y83NTUOHDtV7770nD48sGdMOAAAAAADcgUu3g2vWrJksy9LEiRNVrlw5DRo0SNu3b8/u2gAAAAAAyPdcCu7fffed9u/fr+HDh8vLy0tTp05Vo0aNVKNGDYWGhurYsWPZXScAAAAAAPmSS8FdkipXrqyxY8fqyJEjWr16tTp37qyDBw9qxIgRqly5smw2m06ePKmrV69mZ70AAAAAAOQrLgd3xwJubmrXrp3+85//6MSJExo3bpyqVasmy7K0du1a+fv7q1+/ftq8eXN21AsAAAAAQL7iUnCfP3++fv311xTTS5UqpaFDh2rPnj3aunWrevfuLUmaO3euWrRokaWFAgAAAACQH7kU3Hv37q0VK1ak2aZRo0aaM2eOTp06pVmzZikwMDAr6gMAAAAAIF9Ld1f5OylYsKD69eunrVu3ZvWqAQAAAADId7I8uAMAAAAAgKxDcAcAAAAAwGAerjaMiorS/Pnz07XyoKCgdBcEAAAAAAD+x+XgvnLlSq1cudKltpZlyWazEdwBAAAAAMgkl4N706ZN1bRp0+ysBQAAAAAA3Mbl4N6sWTONGjUqO2sBAAAAAAC3YXA6AAAAAAAMRnAHAAAAAMBgBHcAAAAAAAzmUnAPDg5WrVq1srkUAAAAAABwO5cGp5s7d26KaSdOnNCpU6ckSffcc4/KlSuXtZUBAAAAAADXR5WXpCtXrmjixIkKCwvTiRMnks0rV66c+vXrpyFDhqhQoUJZWiQAAAAAAPmVy8H9wIEDatu2rQ4cOCDLslS2bFkFBARIko4dO6bjx4/rnXfe0aJFi7Ru3TpVrlw524oGAAAAACC/cOka97i4OLVv31779+9Xjx49tGfPHh0/flyRkZGKjIzU8ePHtWfPHvXs2VP79u1Tu3btFBcXl921AwAAAABw13MpuH/yySf666+/NHr0aC1cuFD33Xdfijb33XefFixYoDFjxujPP//UjBkzsrxYAAAAAADyG5eC+3/+8x9VrVpVo0aNumPbESNGqFq1alq2bFmmiwMAAAAAIL9zKbj/97//VevWrWWz2e7Y1mazqXXr1tqzZ0+miwMAAAAAIL9zKbjHxsaqaNGiLq+0SJEiio2NzXBRAAAAAADgJpeCe5kyZbR//36XV3rgwAGVLl06w0UBAAAAAICbXArujRo10tq1axUdHX3HttHR0frmm2/08MMPZ7o4AAAAAADyO5eC+wsvvKArV67oySef1Llz51Jtd/78eT355JO6evWqnn/++SwrEgAAAACA/MrDlUbNmzfXc889p1mzZqlGjRoaMGCAWrRooYCAAEnSsWPHFBERoVmzZuncuXPq16+fWrRoka2FAwAAAACQH7gU3CVp+vTpKlKkiD766COFhoYqNDQ02XzLsuTm5qbXXntN48ePz/JCAQAAAADIj1wO7u7u7powYYKef/55zZs3T5GRkY5r3v39/dW4cWMFBQWpevXq2VYsAAAAAAD5jcvBPUm1atX03nvvZUctAAAAAADgNi4NTufu7q533303u2sBAAAAAAC3cSm4W5Yly7KyuxYAAAAAAHAbl4I7AAAAAADIHQR3AAAAAAAM5nJwt9ls2VkHAAAAAABwwuXg/vbbb8vd3d3lh4dHugesBwAAAAAAt3E5XRcpUkTFihXLxlIAAAAAAMDtXA7ur732mkaNGpWdtQAAAAAAgNswOB0AAAAAAAYjuAMAAAAAYDCCOwAAAAAABsux4B4TE6OjR4/m1OYAAAAAALgruDQ4XWJiYqY39NFHH+mdd95RQkJCptcFAAAAAEB+QVd5AAAAAAAMRnAHAAAAAMBgBHcAAAAAAAxGcAcAAAAAwGAEdwAAAAAADEZwBwAAAADAYAR3AAAAAAAMRnAHAAAAAMBgORbcLcuSZVk5tTkAAAAAAO4KORbc3377bSUmJubU5gAAAAAAuCu4FNxbtGih+fPnJ5u2bds2TZkyxWn7cePGqWTJkpmvDgAAAACAfM6l4L5p0yYdPnw42bR169bptddec9r++vXrunjxYmZrAwAAAAAg32NwOgAAAAAADEZwBwAAAADAYAR3AAAAAAAMRnAHAAAAAMBgBHcAAAAAAAzm4WrD1atXKzo62vH8559/liS99NJLKdru2LEjC0oDAAAAAAAuB/eff/7ZEdZvNWPGDKftbTZbxqsCAAAAAACSXAzuGzduzO46AAAAAACAEy4F96ZNm2Z3HQAAAAAAwAkGpwMAAAAAwGAEdwAAAAAADOZSV3l3d/d0r9hms+nGjRvpXg4AAAAAAPyPS8Hdsix5enrq3nvvze56AAAAAADALVzqKu/t7S273S6bzaa+fftq06ZN2rNnzx0fGTVt2jRVqlRJPj4+CgwM1Pbt29Nsf/HiRb388su655575O3trerVq2vNmjUZ3j4AAAAAAKZwKbifOnVKU6ZMUYECBTRs2DAFBAToySef1KpVq5SYmJilBS1ZskQhISEaPXq0du3apZo1a6pNmzY6c+aM0/bx8fFq1aqVDh8+rC+//FJ//vmnZs2apXLlymVpXQAAAAAA5AaXgnuxYsU0cOBA7dy5U7/88oteeOEF/fDDD+rcubPKlSunYcOG6c8//8ySgiZNmqTnnntOffr00QMPPKAZM2bI19dXYWFhTtuHhYXpwoULWrFihR5++GFVqlRJTZs2Vc2aNbOkHgAAAAAAcpPNsiwrIwvGx8dr+fLlCgsLU0REhCzLUqNGjTR79mzdf//9GSomPj5evr6++vLLL9W5c2fH9ODgYF28eFErV65MsUy7du1UokQJ+fr6auXKlSpdurR69uypYcOGpTqoXlxcnOLi4hzPY2JiFBAQoHPnzqlIkSIZqh1A9rHb7QoPD1erVq3k6emZ2+UAAJBncAwFzBUTE6NSpUrp0qVLd8yhLg1O54yXl5e6deumbt26KTIyUl27dlVkZKT++uuvDAf3c+fOKSEhQX5+fsmm+/n5ae/evU6XOXjwoL777js988wzWrNmjfbv36+XXnpJdrtdo0ePdrpMaGioxowZk2L6hg0b5Ovrm6HaAWS/8PDw3C4BAIA8iWMoYJ6rV6+63DbDwd1ut2vFihUKCwvTt99+q4SEBAUGBqp69eoZXWWGJCYmqkyZMpo5c6bc3d1Vt25dnThxQhMmTEg1uA8fPlwhISGO50ln3Fu3bs0Zd8BAnC0AACBjOIYC5oqJiXG5bbqDe1RUlObOnatFixbp/PnzKlOmjAYPHqx+/fqpRo0a6V1dMqVKlZK7u7tOnz6dbPrp06fl7+/vdJl77rlHnp6eybrF16hRQ9HR0YqPj5eXl1eKZby9veXt7Z1iuqenJ19ogMHYRwEAyBiOoYB50rNPujQ43d9//62pU6eqbt26qlu3rqZPn65GjRrpq6++0vHjxzVx4sRMh3bpZvf7unXrKiIiwjEtMTFRERERatSokdNlHn74Ye3fvz/Z6PZ//fWX7rnnHqehHQAAAACAvMSlM+733HOP7Ha7qlevrtDQUAUHB6e4Dj2rhISEKDg4WPXq1VODBg00efJkxcbGqk+fPpKkoKAglStXTqGhoZKkF198UVOnTtXgwYP1yiuvaN++fXr//fc1aNCgbKkPAAAAAICc5FJwj4+Pl6enp2w2m+bNm6d58+bdcRmbzaY//vgj3QV169ZNZ8+e1ahRoxQdHa1atWpp3bp1jh8Kjh49Kje3/3UUCAgI0Pr16/Xaa6/poYceUrly5TR48GANGzYs3dsGAAAAAMA0Lt0O7tagnB63dl83WUxMjIoWLerSMPwAcp7dbteaNWvUrl07rs8DACAdOIYC5kpPDnXpjHteCeAAAAAAANxtMnYqHQAAAAAA5AiCOwAAAAAABkt3cN+0aZOCgoJUrVo1FSpUSIUKFVK1atUUHBys77//PjtqBAAAAAAg33LpGndJunbtmvr06aNly5bp9vHsDhw4oAMHDmjhwoXq2rWrwsLCVKBAgSwvFgAAAACA/MblM+7du3fX0qVLVaVKFX3yySf666+/dO3aNV27dk1//fWXpk+fripVqmjp0qXq0aNHdtYMAAAAAEC+4dIZ96+++kqrVq1Shw4dtHTpUvn4+CSbX7VqVVWtWlV9+vRR165dtWrVKi1fvlxPPvlkthQNAAAAAEB+4dIZ93nz5qlkyZJauHBhitB+K29vby1YsEAlSpTQ3Llzs6xIAAAAAADyK5eC+44dO9S+ffs73hRekooUKaIOHTpox44dmS4OAAAAAID8zqXgfuHCBZUvX97llZYrV05///13hosCAAAAAAA3uRTcixYtqjNnzri80jNnzrh0dh4AAAAAAKTNpeBeq1YtrVmzRnFxcXdsGxcXpzVr1qhmzZqZLg4AAAAAgPzOpeDeo0cPnTx5UoMGDbpj28GDB+vUqVPq2bNnposDAAAAACC/cym4BwcHKzAwULNnz1bz5s317bffKj4+3jE/Pj5e4eHhatGihWbNmqUGDRooODg424oGAAAAACC/cOk+7m5ubvr666/1xBNP6Pvvv9fmzZvl4eGhUqVKSZLOnTunGzduyLIsBQYGauXKlXJzc+k3AQAAAAAAkAaX03Xp0qW1efNmzZw5Uw0bNpQknTp1SqdOnZIkNWrUSDNnztQPP/ygMmXKZE+1AAAAAADkMy6dcXc09vBQ//791b9/fyUkJOj8+fOSpJIlS8rd3T1bCgQAAAAAID9LV3C/lbu7O2fWAQAAAADIZi51lbcsS88995z69u0ru92earv4+Hj17dtXL7zwQpYVCAAAAABAfuZScF++fLnCwsL0yCOPyNPTM9V2Xl5eatq0qWbNmqUVK1ZkVY0AAAAAAORbLgX3L774Qv7+/i7d4q1Xr14qW7asFixYkOniAAAAAADI71wK7tu2bVPLli1dusWbm5ubHnvsMe3YsSPTxQEAAAAAkN+5FNzPnDmjgIAAl1darlw5nTlzJsNFAQAAAACAm1wK7t7e3rp69arLK7127Zq8vb0zXBQAAAAAALjJpeAeEBCgXbt2ubzSX375RRUqVMhwUQAAAAAA4CaXgnvz5s21ZcsW7d69+45td+/erc2bN6tFixaZLg4AAAAAgPzOpeA+aNAg2Ww2PfXUU/rzzz9TbffXX3/pqaeekru7uwYOHJhlRQIAAAAAkF95uNKoWrVq+uCDD/T666+rVq1aevrpp9W8eXOVL19eknTixAlFREToP//5j65fv66JEyeqWrVq2Vo4AAAAAAD5gUvBXZKGDBmiwoUL64033tDChQv1+eefJ5tvWZaKFCmijz/+WM8991yWFwoAAAAAQH7kcnCXpOeff17dunXTl19+qa1btyo6OlqS5O/vr4cfflhdunRR0aJFs6VQAAAAAADyo3QFd0kqWrSo+vXrp379+mVHPQAAAAAA4BYuDU4HAAAAAAByh0tn3Ddv3pyhlT/66KMZWg4AAAAAANzkUnBv1qyZbDZbulZss9l048aNDBUFAAAAAABucim4P//88y4H92+//VYHDhzIVFEAAAAAAOAml4L7jBkz7tjm559/1rBhw3TgwAG5u7urf//+mS4OAAAAAID8LtOD0x08eFDdu3dXYGCgNm7cqCeffFJ//PGHPvnkk6yoDwAAAACAfC3dt4NLcvbsWY0ZM0azZs2S3W7XI488ovHjxyswMDAr6wMAAAAAIF9Ld3CPjY3VxIkT9eGHH+rKlSt68MEHFRoaqg4dOmRHfQAAAAAA5GsuB/eEhATNmDFDY8eO1enTpxUQEKApU6YoODg43SPOAwAAAAAA17h0jfuSJUt0//33a9CgQYqPj9e4ceP0119/qXfv3oR2AAAAAACykUtn3Hv06CGbzaYqVapoyJAhKl68uFauXHnH5bp27ZrpAgEAAAAAyM9c7ipvWZb279+vl156yaW2NpuN4A4AAAAAQCa5FNxHjx6d3XUAAAAAAAAnCO4AAAAAABjMpcHpAAAAAABA7iC4AwAAAABgMJe6yrdr1y7dK7bZbPrmm2/SvRwAAAAAAPgfl4L7unXr0r1i7u8OAAAAAEDmuRTcDx06lN11AAAAAAAAJ1wK7hUrVsz0hmJiYnTx4kVVqFAh0+sCAAAAACC/yLHB6T766CNVrlw5pzYHAAAAAMBdgVHlAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDuRTcjx49qpiYmExtyLIsWZaVqXUAAAAAAJDfuBTcK1eurI8//jhTG3r77beVmJiYqXUAAAAAAJDfuBTcOVsOAAAAAEDu4Bp3AAAAAAAMRnAHAAAAAMBgHq42vHjxoo4ePZqulVeoUCHdBQEAAAAAgP9xObh//PHH6Rqgzmaz6caNGxkqCgAAAAAA3ORycK9QoYIqVaqUjaUAAAAAAIDbuRzc+/Tpo1GjRmVnLQAAAAAA4DYMTgcAAAAAgMEI7gAAAAAAGIzgDgAAAACAwVwK7hUrVlSxYsWyuRQAAAAAAHA7lwanO3ToUHbXAQAAAAAAnHApuG/evDlDK3/00UcztBwAAAAAALjJpeDerFkz2Wy2dK88ISEh3csAAAAAAID/cfk+7h4eHmrTpo3KlSuXnfUAAAAAAIBbuBTc69evrx07dmjt2rVq3bq1+vbtqyeeeEIeHi7nfgAAAAAAkAEujSq/bds2/f7773rllVf0888/q2vXripbtqyGDBmiP/74I7trBAAAAAAg33L5Pu4PPPCAJk2apBMnTmjZsmWqX7++pkyZooceekgNGjTQzJkzFRMTk521AgAAAACQ77gc3JN4eHjon//8p7755hsdPXpUY8eO1aVLl/Tiiy+qbNmy2rJlS3bUCQAAAABAvpTu4H6re+65R0OGDNHo0aNVtmxZXbt2TRcuXMiq2gAAAAAAyPcyPLrczp07FRYWpsWLF+vixYvy9/fXG2+8ocaNG2dlfQAAAAAA5GvpCu7nz5/XggULNHfuXP3+++/y8PBQ+/bt1bdvX7Vr105ubpk6gQ8AAAAAAG7jUtJes2aNunTponLlyikkJEQJCQmaMGGCjh8/rq+++kodOnTI8tA+bdo0VapUST4+PgoMDNT27dtdWm7x4sWy2Wzq3LlzltYDAAAAAEBucOmMe4cOHeTp6am2bduqb9++atiwoSTJsiydOXMm1eXKlCmToaKWLFmikJAQzZgxQ4GBgZo8ebLatGmjP//8M811Hj58WEOHDtUjjzySoe0CAAAAAGAal7vK37hxQ6tWrdKqVatcam+z2XTjxo0MFTVp0iQ999xz6tOnjyRpxowZ+uabbxQWFqY333zT6TIJCQl65plnNGbMGP3www+6ePFihrYNAAAAAIBJXArujz76qGw2W3bXIkmKj4/Xzp07NXz4cMc0Nzc3tWzZUpGRkaku984776hMmTLq16+ffvjhhzS3ERcXp7i4OMfzpPvP2+122e32TL4CAFktab9k/wQAIH04hgLmSs9+6VJw37RpU7qLuDUYp8e5c+eUkJAgPz+/ZNP9/Py0d+9ep8ts2bJFc+bMUVRUlEvbCA0N1ZgxY1JM37Bhg3x9fdNdM4CcER4entslAACQJ3EMBcxz9epVl9tm+HZwqdm1a5fmzJmjxYsX6/z581m9+hQuX76sXr16adasWSpVqpRLywwfPlwhISGO5zExMQoICFDr1q1VpEiR7CoVQAbZ7XaFh4erVatW8vT0zO1yAADIMziGAuZK6vntiiwJ7hcvXtTChQs1Z84c/frrr7IsSwUKFMjQukqVKiV3d3edPn062fTTp0/L398/RfsDBw7o8OHD6tixo2NaYmKiJMnDw0N//vmnqlSpkmwZb29veXt7p1iXp6cnX2iAwdhHAQDIGI6hgHnSs09m6h5u3377rXr06KGyZctq8ODB2r17txo2bKiZM2cqOjo6Q+v08vJS3bp1FRER4ZiWmJioiIgINWrUKEX7+++/X7/99puioqIcj06dOql58+aKiopSQEBAhl8fAAAAAAC5Ld1n3I8dO6a5c+dq7ty5Onr0qCzLUrly5XTixAn17t1bYWFhmS4qJCREwcHBqlevnho0aKDJkycrNjbWMcp8UFCQypUrp9DQUPn4+Ogf//hHsuWLFSsmSSmmAwAAAACQ17gU3O12u1asWKE5c+YoIiJCCQkJKliwoJ555hkFBQWpRYsW8vDwkIdH1lwy361bN509e1ajRo1SdHS0atWqpXXr1jkGrDt69Kjc3DLVWQAAAAAAgDzBpaRdtmxZXbhwQTabTc2bN1dQUJD++c9/qmDBgtlW2MCBAzVw4ECn8+40yv28efOyviAAAAAAAHKBS8H9/PnzcnNz02uvvaY33nhDpUuXzu66AAAAAACAXBycrnfv3ipQoIAmTZqk8uXLq1OnTlq2bJni4+Ozuz4AAAAAAPI1l4J7WFiYTp06pU8//VR16tTR6tWr1b17d/n5+WnAgAHasmVLdtcJAAAAAEC+5PIIb4UKFVL//v0VGRmpP/74Q6+++qq8vLw0a9YsNW3aVDabTX/++aeOHDmSnfUCAAAAAJCvZGho9ho1aujDDz/UiRMntHTpUrVu3Vo2m00//PCDqlSposcee0wLFizI6loBAAAAAMh3MnVPNQ8PD3Xp0kVr167V4cOHNWbMGFWsWFEbN25U7969s6hEAAAAAADyryy7GXr58uU1cuRIHThwQOHh4erevXtWrRoAAAAAgHzLpdvBpddjjz2mxx57LDtWDQAAAABAvpJlZ9wBAAAAAEDWI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABjM2uE+bNk2VKlWSj4+PAgMDtX379lTbzpo1S4888oiKFy+u4sWLq2XLlmm2BwAAAAAgrzAyuC9ZskQhISEaPXq0du3apZo1a6pNmzY6c+aM0/abNm1Sjx49tHHjRkVGRiogIECtW7fWiRMncrhyAAAAAACylpHBfdKkSXruuefUp08fPfDAA5oxY4Z8fX0VFhbmtP3nn3+ul156SbVq1dL999+v2bNnKzExURERETlcOQAAAAAAWcsjtwu4XXx8vHbu3Knhw4c7prm5ually5aKjIx0aR1Xr16V3W5XiRIlnM6Pi4tTXFyc43lMTIwkyW63y263Z6J6ANkhab9k/wQAIH04hgLmSs9+aVxwP3funBISEuTn55dsup+fn/bu3evSOoYNG6ayZcuqZcuWTueHhoZqzJgxKaZv2LBBvr6+6S8aQI4IDw/P7RIAAMiTOIYC5rl69arLbY0L7pn1wQcfaPHixdq0aZN8fHycthk+fLhCQkIcz2NiYhzXxRcpUiSnSgXgIrvdrvDwcLVq1Uqenp65XQ4AAHkGx1DAXEk9v11hXHAvVaqU3N3ddfr06WTTT58+LX9//zSXnThxoj744AN9++23euihh1Jt5+3tLW9v7xTTPT09+UIDDMY+CgBAxnAMBcyTnn3SuMHpvLy8VLdu3WQDyyUNNNeoUaNUlxs/frzeffddrVu3TvXq1cuJUgEAAAAAyHbGnXGXpJCQEAUHB6tevXpq0KCBJk+erNjYWPXp00eSFBQUpHLlyik0NFSSNG7cOI0aNUqLFi1SpUqVFB0dLUkqVKiQChUqlGuvAwAAAACAzDIyuHfr1k1nz57VqFGjFB0drVq1amndunWOAeuOHj0qN7f/dRb45JNPFB8fry5duiRbz+jRo/X222/nZOkAAAAAAGQpI4O7JA0cOFADBw50Om/Tpk3Jnh8+fDj7CwIAAAAAIBcYd407AAAAAAD4H4I7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AONFRkZq9uzZioyMzO1SAAAAgBxHcAdgtOvXr2vChAm6fPmyJk6cqOvXr+d2SQAAAECOIrgDMNpnn32my5cvS5JiYmI0f/78XK4IAAAAyFkEdwDGOn78uBYvXpxs2uLFi3X8+PFcqggAAADIeQR3AEayLEvjxo2TZVnJpicmJjqdDgAAANytCO4AjHTkyBH99ttvTuf99ttvOnLkSA5XBAAAAOQOgjsAAAAAAAYjuAMwUoUKFeTp6el0nqenpypUqJDDFQEAkPdwS1Xg7kBwB2CkQ4cOyW63O51nt9t16NChHK4IAIC85fr16xo1apQuX76sUaNGcUtVIA8juAMw0saNGzM1HwCA/G78+PHJnk+YMCGXKgGQWQR3AEa67777MjUfAID87Pjx4/ruu++STYuIiOCWqkAeRXAHYKTq1atnaj4AAPmVZVl66aWXnM576aWXuKUqkAd55HYBqZk2bZomTJig6Oho1axZU//+97/VoEGDVNsvW7ZMI0eO1OHDh1WtWjWNGzdO7dq1y8GKkR9YlsX1YTmkW7dud5y/du3aHKom//Lx8ZHNZsvtMgDcBTiG5px9+/YpJibG6byYmBj99ttvqlatWg5Xlf9wDEVWslkG/uS2ZMkSBQUFacaMGQoMDNTkyZO1bNky/fnnnypTpkyK9j/++KMeffRRhYaGqkOHDlq0aJHGjRunXbt26R//+McdtxcTE6OiRYvq0qVLKlKkSHa8pGyRdADkIJhzrl+/rh49euR2GUCO+eKLL+Tj45PbZeQbPj4+/KGXQziG5jyOochvOIbmrLx4DE1PDjUyuAcGBqp+/fqaOnWqJCkxMVEBAQF65ZVX9Oabb6Zo361bN8XGxmr16tWOaQ0bNlStWrU0Y8aMO24vrwb3a9euqW3btrldBgAgC61du1YFChTI7TLuehxDAeDuk9eOoenJocZ1lY+Pj9fOnTs1fPhwxzQ3Nze1bNky1ftPRkZGKiQkJNm0Nm3aaMWKFU7bx8XFKS4uzvE8qSuR3W5P9fZTJspLtQIAXGO32+XhYdzh+a7DMRQA7j557RianmORca/q3LlzSkhIkJ+fX7Lpfn5+2rt3r9NloqOjnbaPjo522j40NFRjxoxJMX3Dhg3y9fXNYOU5z7IsDRw4MLfLyFfsdrs+/fTT3C4DyDEDBgyQp6dnbpeRr3z33Xd5qptfXsUxNOdxDEV+wzE05+W1Y+jVq1ddbmtccM8Jw4cPT3aGPiYmRgEBAWrdunWe6iqPnGdZltq3b5/bZeQrnTp1SjHt66+/zoVK8qe8dq0YAHNxDM15HENzF8dQ3Elqg0g6Y1xwL1WqlNzd3XX69Olk00+fPi1/f3+ny/j7+6ervbe3t7y9vVNM9/T05Fcx3JGXl1dul5Dv8QMbAORNHENzVoMGDbR9+/ZkzzmGAuZIT/Y07j7uXl5eqlu3riIiIhzTEhMTFRERoUaNGjldplGjRsnaS1J4eHiq7QHkHZs2bUrzOQAAcG78+PFpPgeQdxh3xl2SQkJCFBwcrHr16qlBgwaaPHmyYmNj1adPH0lSUFCQypUrp9DQUEnS4MGD1bRpU3344Ydq3769Fi9erJ9//lkzZ87MzZcBIIuEh4drzZo1ateuXW6XAgBAnsIxFLg7GBncu3XrprNnz2rUqFGKjo5WrVq1tG7dOscAdEePHpWb2/86CzRu3FiLFi3SiBEj9NZbb6latWpasWKFS/dwBwAAAADAZEbexz2n5dX7uAP5hd1ud5wtYBwKAABcxzEUMFd6cqhx17gDAAAAAID/IbgDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwj9wuwASWZUmSYmJicrkSAM7Y7XZdvXpVMTEx8vT0zO1yAADIMziGAuZKyp9JeTQtBHdJly9fliQFBATkciUAAAAAgPzk8uXLKlq0aJptbJYr8f4ul5iYqJMnT6pw4cKy2Wy5XQ6A28TExCggIEDHjh1TkSJFcrscAADyDI6hgLksy9Lly5dVtmxZubmlfRU7Z9wlubm5qXz58rldBoA7KFKkCH90AACQARxDATPd6Ux7EganAwAAAADAYAR3AAAAAAAMRnAHYDxvb2+NHj1a3t7euV0KAAB5CsdQ4O7A4HQAAAAAABiMM+4AAAAAABiM4A4AAAAAgMEI7gAAAAAAGIzgDgAAAACAwQjuAIw2bdo0VapUST4+PgoMDNT27dtzuyQAAIy3efNmdezYUWXLlpXNZtOKFStyuyQAmUBwB2CsJUuWKCQkRKNHj9auXbtUs2ZNtWnTRmfOnMnt0gAAMFpsbKxq1qypadOm5XYpALIAt4MDYKzAwEDVr19fU6dOlSQlJiYqICBAr7zyit58881crg4AgLzBZrNp+fLl6ty5c26XAiCDOOMOwEjx8fHauXOnWrZs6Zjm5uamli1bKjIyMhcrAwAAAHIWwR2Akc6dO6eEhAT5+fklm+7n56fo6OhcqgoAAADIeQR3AAAAAAAMRnAHYKRSpUrJ3d1dp0+fTjb99OnT8vf3z6WqAAAAgJxHcAdgJC8vL9WtW1cRERGOaYmJiYqIiFCjRo1ysTIAAAAgZ3nkdgEAkJqQkBAFBwerXr16atCggSZPnqzY2Fj16dMnt0sDAMBoV65c0f79+x3PDx06pKioKJUoUUIVKlTIxcoAZAS3gwNgtKlTp2rChAmKjo5WrVq1NGXKFAUGBuZ2WQAAGG3Tpk1q3rx5iunBwcGaN29ezhcEIFMI7gAAAAAAGIxr3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAAAAAACDEdwBAAAAADAYwR0AAAAAAIMR3AEAAAAAMBjBHQAAAAAAgxHcAQAAAAAwGMEdAIA8wmazpetxqyNHjsjd3V02m00TJkxIdRubNm1KsR5vb29VqlRJffr00b59+9Ks8eLFixo3bpyaNm2qMmXKyNPTU0WLFlWdOnU0aNAgbdu2LcUyvXv3vuNrmTdvntPa0no0a9YsQ+8zAACm8cjtAgAAgGtGjx6dYtrkyZN16dIlp/NuFRYWpsTERNlsNoWFhen1119Ps33dunXVoUMHSdKlS5e0detWzZs3T1999ZW2b9+u++67L8Uy3333nbp166Zz586pWrVq6tSpk/z8/BQbG6v//ve/mjVrlv79739r8uTJGjx4cIrl+/Xrp/Llyzutp1atWipWrFiK13nx4kV9/PHHqlixonr37p1sXqVKldJ8jQAA5BU2y7Ks3C4CAABkTKVKlXTkyBGldThPTExU5cqVdfXqVXXo0EHz5s3T1q1b1bhx4xRtN23apObNm2vAgAGaMWNGsnkvvPCCPv30UwUFBemzzz5LNi8qKkqNGzeWzWbTp59+qmeeeSbFWf8LFy5o8uTJ8vT01MiRIx3Te/furc8++0yRkZFq2LBhul7/4cOHVblyZTVt2lSbNm1K17IAAOQVdJUHAOAuFx4erqNHj6p79+7q16+fJGnOnDnpXk/Ssjt37kwxb9CgQbp27ZqmTZumZ599NkVol6QSJUronXfe0fDhw9O9bQAA8jOCOwAAd7mkkB4UFKQmTZro3nvv1dKlS3XlypUMrc/DI/mVdvv27dMPP/ygChUqKCgoKN3LAwCAtHHkBADgLnb+/HmtXLlS999/v+rXry9JevbZZ/XOO+9oyZIljrPorkj6AaBJkybJpkdGRkqSmjZtKje3jJ8TmD17ttatW+d03ptvvikfH58MrxsAgLyM4A4AwF1swYIFio+PV69evRzTgoKC9M4772jOnDmpBveff/5Zb7/9tiQpJiZGW7Zs0Y4dO1S9enWNGDEiWdvo6GhJUtmyZVOs5+LFi5o8eXKyacWKFdOrr76aom1a3fdfffVVgjsAIN8iuAMAcBebM2eObDabnn32Wce0KlWqqHHjxvrxxx+1Z88e1ahRI8VyO3fuTHEt+3333actW7aoVKlSLm//4sWLGjNmTLJpFStWdBrcMzI4HQAA+QHXuAMAcJfatm2bfv/9dzVr1kwVKlRINi/pWvSwsDCnyw4YMECWZSkxMVEnTpzQ0KFD9eeff+rpp59WQkJCsrZ+fn6SpJMnT6ZYT6VKlWRZluPh7e2dFS8NAIB8heAOAMBdKqnr+caNG2Wz2ZI9XnjhBUnS/PnzZbfbU12HzWZT2bJlNWHCBD377LPatGmT/v3vfydrk3Rbue+//16JiYnZ9GoAAMi/6CoPAMBdKDY2VosXL5avr6969OjhtM2OHTv066+/avXq1XryySfvuM7x48frP//5j8aOHat+/fqpcOHCkqRq1aqpSZMm2rJlixYuXOjSyPIAAMB1BHcAAO5Cy5Yt0+XLlxUUFKTZs2c7bbNhwwa1adNGc+bMcSm433PPPXrhhRf00UcfafLkyRo5cqRj3pQpU/Twww/rpZdekqenp9MfC2JiYmRZVsZfFAAA+RTBHQCAu1BSN/k+ffqk2qZly5YqX7681q1bp5MnTzodFf52w4YN06effqpJkybplVdeUbFixSRJtWvX1urVq9WtWzf17NlTo0eP1qOPPio/Pz9dvnxZR48e1YYNGxQfH5/idnJJ0rodXMOGDfX444/fsT4AAO5GBHcAAO4yf/75p7Zs2aLKlSuradOmqbZzc3NTcHCw3nvvPc2bN09vvfXWHdft5+enF198UR9++KEmTZqkd955xzGvRYsW2rdvn2bMmKFvvvlGK1as0KVLl+Tr66vKlSurb9++CgoKUoMGDZyuO63bwQ0ePJjgDgDIt2wWfdYAAAAAADAWo8oDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAGI7gDAAAAAGAwgjsAAAAAAAYjuAMAAAAAYDCCOwAAAAAABiO4AwAAAABgMII7AAAAAAAG+3/XAjLedyFzFAAAAABJRU5ErkJggg=="},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\n\nBox Plot of AMT_CREDIT by TARGET\n\nBoth groups (TARGET 0 and TARGET 1) exhibit a skewed distribution.Majority of the credit amounts are relatively low, with a smaller number of significantly higher credit amounts.Both groups have a significant number of outliers, represented by the individual data points beyond the whiskers. These outliers suggest the presence of some individuals with exceptionally high credit amounts in both groups.TARGET 1 group generally have higher credit amounts compared to those in the TARGET 0 group.\n\n\nBox Plot of AMT_INCOME_TOTAL by TARGET\n\nThe median income amount for both TARGET 0 and TARGET 1 is very close to zero, suggesting that a significant portion of individuals in both groups have very low income levelsMajority of the income amounts are relatively low, with a smaller number of significantly higher income amounts.","metadata":{}},{"cell_type":"markdown","source":"### **Analyze discreet vars**\n\n","metadata":{}},{"cell_type":"markdown","source":"#### **_Occupation Type_**","metadata":{}},{"cell_type":"code","source":"def plot_variable_by_target(df, x_variable, target_variable):\n    plt.figure(figsize=(12, 6))\n    sns.countplot(x=x_variable, hue=target_variable, data=df)\n    plt.title(f'Distribution of {x_variable} by {target_variable}')\n    plt.xlabel(x_variable)\n    plt.ylabel('Count')\n    plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better visibility\n    plt.legend(title=target_variable, labels=df[target_variable].unique())\n    plt.tight_layout()\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:53.815011Z","iopub.execute_input":"2024-08-26T01:35:53.815594Z","iopub.status.idle":"2024-08-26T01:35:53.825990Z","shell.execute_reply.started":"2024-08-26T01:35:53.815517Z","shell.execute_reply":"2024-08-26T01:35:53.824752Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"plot_variable_by_target(application, 'OCCUPATION_TYPE', 'TARGET')","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:53.827834Z","iopub.execute_input":"2024-08-26T01:35:53.828301Z","iopub.status.idle":"2024-08-26T01:35:54.803401Z","shell.execute_reply.started":"2024-08-26T01:35:53.828231Z","shell.execute_reply":"2024-08-26T01:35:54.801679Z"},"trusted":true},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nLaborers and sales staff have high Default Rate.\n\nAccounts have very low Default Rate\n","metadata":{}},{"cell_type":"markdown","source":"#### *Drill down on Occupation type with No of customers.*","metadata":{}},{"cell_type":"code","source":"application.groupby('OCCUPATION_TYPE')[['TARGET']].mean()\npd.DataFrame(application['OCCUPATION_TYPE'].value_counts()/application.shape[0])\n#pd.DataFrame(application['OCCUPATION_TYPE'].value_counts()/application.shape[0]).to_clipboard()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:54.805527Z","iopub.execute_input":"2024-08-26T01:35:54.806036Z","iopub.status.idle":"2024-08-26T01:35:54.940079Z","shell.execute_reply.started":"2024-08-26T01:35:54.805977Z","shell.execute_reply":"2024-08-26T01:35:54.938745Z"},"trusted":true},"execution_count":39,"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"                         TARGET\nOCCUPATION_TYPE                \nAccountants            0.048303\nCleaning staff         0.096067\nCooking staff          0.104440\nCore staff             0.063040\nDrivers                0.113261\nHR staff               0.063943\nHigh skill tech staff  0.061599\nIT staff               0.064639\nLaborers               0.105788\nLow-skill Laborers     0.171524\nManagers               0.062140\nMedicine staff         0.067002\nPrivate service staff  0.065988\nRealty agents          0.078562\nSales staff            0.096318\nSecretaries            0.070498\nSecurity staff         0.107424\nWaiters/barmen staff   0.112760","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TARGET</th>\n    </tr>\n    <tr>\n      <th>OCCUPATION_TYPE</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Accountants</th>\n      <td>0.048303</td>\n    </tr>\n    <tr>\n      <th>Cleaning staff</th>\n      <td>0.096067</td>\n    </tr>\n    <tr>\n      <th>Cooking staff</th>\n      <td>0.104440</td>\n    </tr>\n    <tr>\n      <th>Core staff</th>\n      <td>0.063040</td>\n    </tr>\n    <tr>\n      <th>Drivers</th>\n      <td>0.113261</td>\n    </tr>\n    <tr>\n      <th>HR staff</th>\n      <td>0.063943</td>\n    </tr>\n    <tr>\n      <th>High skill tech staff</th>\n      <td>0.061599</td>\n    </tr>\n    <tr>\n      <th>IT staff</th>\n      <td>0.064639</td>\n    </tr>\n    <tr>\n      <th>Laborers</th>\n      <td>0.105788</td>\n    </tr>\n    <tr>\n      <th>Low-skill Laborers</th>\n      <td>0.171524</td>\n    </tr>\n    <tr>\n      <th>Managers</th>\n      <td>0.062140</td>\n    </tr>\n    <tr>\n      <th>Medicine staff</th>\n      <td>0.067002</td>\n    </tr>\n    <tr>\n      <th>Private service staff</th>\n      <td>0.065988</td>\n    </tr>\n    <tr>\n      <th>Realty agents</th>\n      <td>0.078562</td>\n    </tr>\n    <tr>\n      <th>Sales staff</th>\n      <td>0.096318</td>\n    </tr>\n    <tr>\n      <th>Secretaries</th>\n      <td>0.070498</td>\n    </tr>\n    <tr>\n      <th>Security staff</th>\n      <td>0.107424</td>\n    </tr>\n    <tr>\n      <th>Waiters/barmen staff</th>\n      <td>0.112760</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"                          count\nOCCUPATION_TYPE                \nLaborers               0.179460\nSales staff            0.104393\nCore staff             0.089655\nManagers               0.069497\nDrivers                0.060495\nHigh skill tech staff  0.037007\nAccountants            0.031911\nMedicine staff         0.027762\nSecurity staff         0.021856\nCooking staff          0.019336\nCleaning staff         0.015131\nPrivate service staff  0.008624\nLow-skill Laborers     0.006806\nWaiters/barmen staff   0.004384\nSecretaries            0.004244\nRealty agents          0.002442\nHR staff               0.001831\nIT staff               0.001711","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>OCCUPATION_TYPE</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Laborers</th>\n      <td>0.179460</td>\n    </tr>\n    <tr>\n      <th>Sales staff</th>\n      <td>0.104393</td>\n    </tr>\n    <tr>\n      <th>Core staff</th>\n      <td>0.089655</td>\n    </tr>\n    <tr>\n      <th>Managers</th>\n      <td>0.069497</td>\n    </tr>\n    <tr>\n      <th>Drivers</th>\n      <td>0.060495</td>\n    </tr>\n    <tr>\n      <th>High skill tech staff</th>\n      <td>0.037007</td>\n    </tr>\n    <tr>\n      <th>Accountants</th>\n      <td>0.031911</td>\n    </tr>\n    <tr>\n      <th>Medicine staff</th>\n      <td>0.027762</td>\n    </tr>\n    <tr>\n      <th>Security staff</th>\n      <td>0.021856</td>\n    </tr>\n    <tr>\n      <th>Cooking staff</th>\n      <td>0.019336</td>\n    </tr>\n    <tr>\n      <th>Cleaning staff</th>\n      <td>0.015131</td>\n    </tr>\n    <tr>\n      <th>Private service staff</th>\n      <td>0.008624</td>\n    </tr>\n    <tr>\n      <th>Low-skill Laborers</th>\n      <td>0.006806</td>\n    </tr>\n    <tr>\n      <th>Waiters/barmen staff</th>\n      <td>0.004384</td>\n    </tr>\n    <tr>\n      <th>Secretaries</th>\n      <td>0.004244</td>\n    </tr>\n    <tr>\n      <th>Realty agents</th>\n      <td>0.002442</td>\n    </tr>\n    <tr>\n      <th>HR staff</th>\n      <td>0.001831</td>\n    </tr>\n    <tr>\n      <th>IT staff</th>\n      <td>0.001711</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"\n**_Key Insights:_**\n\nAccounts have very low Default Rate.\n\nLaborers generally have  high Default Rate.\n\nSales staff have high default rate\n\nCooking staff have high default rate\n\nSecurity staff have Very high Default Rate","metadata":{}},{"cell_type":"code","source":"def analyze_categorical_continuous(application, categorical_variable, continuous_variable, thresh=0.01):\n    # Handle NaN values in categorical_variable by replacing them with a placeholder\n    application[categorical_variable] = application[categorical_variable].fillna('Missing')\n\n    # Calculate value counts of categorical_variable\n    value_counts = application[categorical_variable].value_counts(normalize=True)\n    \n    # Map values to 'other' if contribution is less than thresh\n    application[f'{categorical_variable}_thresholded'] = application[categorical_variable].apply(lambda x: x if value_counts[x] >= thresh else 'other')\n\n    # Create deciles for the continuous variable\n    application['continuous_variable_decile'] = pd.qcut(application[continuous_variable], 5, labels=False) + 1\n\n    # Pivot of total defaults (Expressed as overall %) (TARGET)\n    pivot_total_defaults = pd.crosstab(application[f'{categorical_variable}_thresholded'], application['continuous_variable_decile'], \n                                       values=application['TARGET'], aggfunc='sum', normalize='all')\n\n    # % of default group by the continuous variable (TARGET)\n    default_by_continuous = application.groupby(f'{categorical_variable}_thresholded')['TARGET'].mean()\n\n    # Pivot of row wise percentage (TARGET)\n    pivot_row_wise_percentage = pd.crosstab(application[f'{categorical_variable}_thresholded'], application['continuous_variable_decile'], \n                                            values=application['TARGET'], aggfunc='mean')\n\n    # Pivot of column wise percentage (TARGET)\n    overall_data_percent = pd.crosstab(application[f'{categorical_variable}_thresholded'], application['continuous_variable_decile'], \n                                       values=application['TARGET'], aggfunc='count', normalize='all')\n\n    # Return the results\n    return pivot_total_defaults, default_by_continuous, pivot_row_wise_percentage, overall_data_percent\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:54.942089Z","iopub.execute_input":"2024-08-26T01:35:54.942498Z","iopub.status.idle":"2024-08-26T01:35:54.953740Z","shell.execute_reply.started":"2024-08-26T01:35:54.942457Z","shell.execute_reply":"2024-08-26T01:35:54.952346Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"code","source":"pivot_total_defaults, default_by_continuous, pivot_row_wise_percentage, overall_data_percent = analyze_categorical_continuous(application, 'OCCUPATION_TYPE', 'AMT_ANNUITY')\n#pivot_total_defaults\n#default_by_continuous\npivot_row_wise_percentage\noverall_data_percent\n#overall_data_percent.to_clipboard()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:54.955490Z","iopub.execute_input":"2024-08-26T01:35:54.955969Z","iopub.status.idle":"2024-08-26T01:35:57.078984Z","shell.execute_reply.started":"2024-08-26T01:35:54.955916Z","shell.execute_reply":"2024-08-26T01:35:57.077427Z"},"trusted":true},"execution_count":41,"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"continuous_variable_decile        1.0       2.0       3.0       4.0       5.0\nOCCUPATION_TYPE_thresholded                                                  \nAccountants                  0.043986  0.047293  0.055331  0.065721  0.034138\nCleaning staff               0.079933  0.106961  0.102284  0.122013  0.052966\nCooking staff                0.107199  0.103240  0.113426  0.110357  0.080831\nCore staff                   0.056408  0.065996  0.068321  0.072872  0.052703\nDrivers                      0.094222  0.119431  0.119882  0.131104  0.096818\nHigh skill tech staff        0.054358  0.066634  0.069892  0.065629  0.053000\nLaborers                     0.087181  0.112929  0.114855  0.119225  0.091263\nManagers                     0.056303  0.064371  0.072067  0.068261  0.055125\nMedicine staff               0.063950  0.071467  0.067454  0.080023  0.048917\nMissing                      0.056537  0.067429  0.068903  0.078290  0.055847\nSales staff                  0.082488  0.101030  0.107359  0.103533  0.086554\nSecurity staff               0.086565  0.124224  0.101604  0.124188  0.098309\nother                        0.086660  0.121644  0.111354  0.097732  0.074013","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>continuous_variable_decile</th>\n      <th>1.0</th>\n      <th>2.0</th>\n      <th>3.0</th>\n      <th>4.0</th>\n      <th>5.0</th>\n    </tr>\n    <tr>\n      <th>OCCUPATION_TYPE_thresholded</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Accountants</th>\n      <td>0.043986</td>\n      <td>0.047293</td>\n      <td>0.055331</td>\n      <td>0.065721</td>\n      <td>0.034138</td>\n    </tr>\n    <tr>\n      <th>Cleaning staff</th>\n      <td>0.079933</td>\n      <td>0.106961</td>\n      <td>0.102284</td>\n      <td>0.122013</td>\n      <td>0.052966</td>\n    </tr>\n    <tr>\n      <th>Cooking staff</th>\n      <td>0.107199</td>\n      <td>0.103240</td>\n      <td>0.113426</td>\n      <td>0.110357</td>\n      <td>0.080831</td>\n    </tr>\n    <tr>\n      <th>Core staff</th>\n      <td>0.056408</td>\n      <td>0.065996</td>\n      <td>0.068321</td>\n      <td>0.072872</td>\n      <td>0.052703</td>\n    </tr>\n    <tr>\n      <th>Drivers</th>\n      <td>0.094222</td>\n      <td>0.119431</td>\n      <td>0.119882</td>\n      <td>0.131104</td>\n      <td>0.096818</td>\n    </tr>\n    <tr>\n      <th>High skill tech staff</th>\n      <td>0.054358</td>\n      <td>0.066634</td>\n      <td>0.069892</td>\n      <td>0.065629</td>\n      <td>0.053000</td>\n    </tr>\n    <tr>\n      <th>Laborers</th>\n      <td>0.087181</td>\n      <td>0.112929</td>\n      <td>0.114855</td>\n      <td>0.119225</td>\n      <td>0.091263</td>\n    </tr>\n    <tr>\n      <th>Managers</th>\n      <td>0.056303</td>\n      <td>0.064371</td>\n      <td>0.072067</td>\n      <td>0.068261</td>\n      <td>0.055125</td>\n    </tr>\n    <tr>\n      <th>Medicine staff</th>\n      <td>0.063950</td>\n      <td>0.071467</td>\n      <td>0.067454</td>\n      <td>0.080023</td>\n      <td>0.048917</td>\n    </tr>\n    <tr>\n      <th>Missing</th>\n      <td>0.056537</td>\n      <td>0.067429</td>\n      <td>0.068903</td>\n      <td>0.078290</td>\n      <td>0.055847</td>\n    </tr>\n    <tr>\n      <th>Sales staff</th>\n      <td>0.082488</td>\n      <td>0.101030</td>\n      <td>0.107359</td>\n      <td>0.103533</td>\n      <td>0.086554</td>\n    </tr>\n    <tr>\n      <th>Security staff</th>\n      <td>0.086565</td>\n      <td>0.124224</td>\n      <td>0.101604</td>\n      <td>0.124188</td>\n      <td>0.098309</td>\n    </tr>\n    <tr>\n      <th>other</th>\n      <td>0.086660</td>\n      <td>0.121644</td>\n      <td>0.111354</td>\n      <td>0.097732</td>\n      <td>0.074013</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"continuous_variable_decile        1.0       2.0       3.0       4.0       5.0\nOCCUPATION_TYPE_thresholded                                                  \nAccountants                  0.004732  0.005226  0.005642  0.006878  0.009431\nCleaning staff               0.003906  0.003831  0.003275  0.002585  0.001535\nCooking staff                0.004156  0.004315  0.004215  0.003831  0.002816\nCore staff                   0.018218  0.016803  0.017041  0.018342  0.019252\nDrivers                      0.008836  0.010511  0.012153  0.014585  0.014410\nHigh skill tech staff        0.006641  0.006540  0.007259  0.007730  0.008836\nLaborers                     0.035288  0.036572  0.037064  0.038787  0.031750\nManagers                     0.007740  0.008689  0.011281  0.015769  0.026016\nMedicine staff               0.005746  0.006007  0.005785  0.005567  0.004654\nMissing                      0.071441  0.069691  0.064189  0.054166  0.053981\nSales staff                  0.022433  0.021148  0.021476  0.021076  0.018260\nSecurity staff               0.004696  0.004712  0.004865  0.004504  0.003076\nother                        0.006192  0.005935  0.005958  0.006023  0.005932","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>continuous_variable_decile</th>\n      <th>1.0</th>\n      <th>2.0</th>\n      <th>3.0</th>\n      <th>4.0</th>\n      <th>5.0</th>\n    </tr>\n    <tr>\n      <th>OCCUPATION_TYPE_thresholded</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Accountants</th>\n      <td>0.004732</td>\n      <td>0.005226</td>\n      <td>0.005642</td>\n      <td>0.006878</td>\n      <td>0.009431</td>\n    </tr>\n    <tr>\n      <th>Cleaning staff</th>\n      <td>0.003906</td>\n      <td>0.003831</td>\n      <td>0.003275</td>\n      <td>0.002585</td>\n      <td>0.001535</td>\n    </tr>\n    <tr>\n      <th>Cooking staff</th>\n      <td>0.004156</td>\n      <td>0.004315</td>\n      <td>0.004215</td>\n      <td>0.003831</td>\n      <td>0.002816</td>\n    </tr>\n    <tr>\n      <th>Core staff</th>\n      <td>0.018218</td>\n      <td>0.016803</td>\n      <td>0.017041</td>\n      <td>0.018342</td>\n      <td>0.019252</td>\n    </tr>\n    <tr>\n      <th>Drivers</th>\n      <td>0.008836</td>\n      <td>0.010511</td>\n      <td>0.012153</td>\n      <td>0.014585</td>\n      <td>0.014410</td>\n    </tr>\n    <tr>\n      <th>High skill tech staff</th>\n      <td>0.006641</td>\n      <td>0.006540</td>\n      <td>0.007259</td>\n      <td>0.007730</td>\n      <td>0.008836</td>\n    </tr>\n    <tr>\n      <th>Laborers</th>\n      <td>0.035288</td>\n      <td>0.036572</td>\n      <td>0.037064</td>\n      <td>0.038787</td>\n      <td>0.031750</td>\n    </tr>\n    <tr>\n      <th>Managers</th>\n      <td>0.007740</td>\n      <td>0.008689</td>\n      <td>0.011281</td>\n      <td>0.015769</td>\n      <td>0.026016</td>\n    </tr>\n    <tr>\n      <th>Medicine staff</th>\n      <td>0.005746</td>\n      <td>0.006007</td>\n      <td>0.005785</td>\n      <td>0.005567</td>\n      <td>0.004654</td>\n    </tr>\n    <tr>\n      <th>Missing</th>\n      <td>0.071441</td>\n      <td>0.069691</td>\n      <td>0.064189</td>\n      <td>0.054166</td>\n      <td>0.053981</td>\n    </tr>\n    <tr>\n      <th>Sales staff</th>\n      <td>0.022433</td>\n      <td>0.021148</td>\n      <td>0.021476</td>\n      <td>0.021076</td>\n      <td>0.018260</td>\n    </tr>\n    <tr>\n      <th>Security staff</th>\n      <td>0.004696</td>\n      <td>0.004712</td>\n      <td>0.004865</td>\n      <td>0.004504</td>\n      <td>0.003076</td>\n    </tr>\n    <tr>\n      <th>other</th>\n      <td>0.006192</td>\n      <td>0.005935</td>\n      <td>0.005958</td>\n      <td>0.006023</td>\n      <td>0.005932</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nLaborers with High EMI have high default rate.\n\nSecurity Staff hhaving low or High EMI tend to default more.\n\nSales staff  defaults more  on low and high EMi ","metadata":{}},{"cell_type":"code","source":"def analyze_categorical_categorical(application, categorical_variable1, categorical_variable2, thresh=0.01):\n    # Calculate value counts of categorical_variable1 and categorical_variable2\n    value_counts1 = application[categorical_variable1].value_counts(normalize=True)\n    value_counts2 = application[categorical_variable2].value_counts(normalize=True)\n\n    # Map values to 'other' if contribution is less than thresh for categorical_variable1\n    application[f'{categorical_variable1}_thresholded'] = application[categorical_variable1].apply(lambda x: x if value_counts1[x] >= thresh else 'other1')\n\n    # Map values to 'other' if contribution is less than thresh for categorical_variable2\n    application[f'{categorical_variable2}_thresholded'] = application[categorical_variable2].apply(lambda x: x if value_counts2[x] >= thresh else 'other2')\n\n    # Pivot of total defaults (Expressed as overall %) (TARGET)\n    pivot_total_defaults = pd.crosstab(application[f'{categorical_variable1}_thresholded'], application[f'{categorical_variable2}_thresholded'], \n                                       values=application['TARGET'], aggfunc='sum', normalize='all')\n\n    # % of default group by categorical_variable2 (TARGET)\n    default_by_categorical2 = application.groupby(f'{categorical_variable1}_thresholded')['TARGET'].mean()\n\n    # Pivot of row wise percentage (TARGET)\n    pivot_row_wise_percentage = pd.crosstab(application[f'{categorical_variable1}_thresholded'], application[f'{categorical_variable2}_thresholded'], \n                                            values=application['TARGET'], aggfunc='mean')\n\n    # Pivot of column wise percentage (TARGET)\n    overall_data_percent = pd.crosstab(application[f'{categorical_variable1}_thresholded'], application[f'{categorical_variable2}_thresholded'], \n                                       values=application['TARGET'], aggfunc='count', normalize='all')\n\n    # Return the results\n    return pivot_total_defaults, default_by_categorical2, pivot_row_wise_percentage, overall_data_percent\n","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:57.082437Z","iopub.execute_input":"2024-08-26T01:35:57.082849Z","iopub.status.idle":"2024-08-26T01:35:57.095721Z","shell.execute_reply.started":"2024-08-26T01:35:57.082807Z","shell.execute_reply":"2024-08-26T01:35:57.094459Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"pivot_total_defaults, default_by_categorical2, pivot_row_wise_percentage, overall_data_percent = analyze_categorical_categorical(application, 'CNT_CHILDREN', 'ORGANIZATION_TYPE')\n#pivot_total_defaults\ndefault_by_categorical2\npivot_row_wise_percentage\noverall_data_percent","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:35:57.097946Z","iopub.execute_input":"2024-08-26T01:35:57.098535Z","iopub.status.idle":"2024-08-26T01:36:01.195503Z","shell.execute_reply.started":"2024-08-26T01:35:57.098480Z","shell.execute_reply":"2024-08-26T01:36:01.194173Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"CNT_CHILDREN_thresholded\n0         0.077118\n1         0.089236\n2         0.087218\n3         0.096314\nother1    0.127928\nName: TARGET, dtype: float64"},"metadata":{}},{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"ORGANIZATION_TYPE_thresholded  Business Entity Type 1  Business Entity Type 2  \\\nCNT_CHILDREN_thresholded                                                        \n0                                            0.082862                0.085799   \n1                                            0.074125                0.081016   \n2                                            0.088768                0.086730   \n3                                            0.086420                0.115108   \nother1                                       0.125000                0.150000   \n\nORGANIZATION_TYPE_thresholded  Business Entity Type 3  Construction  \\\nCNT_CHILDREN_thresholded                                              \n0                                            0.090673      0.118454   \n1                                            0.097098      0.128470   \n2                                            0.094735      0.076812   \n3                                            0.113139      0.104167   \nother1                                       0.147541      0.384615   \n\nORGANIZATION_TYPE_thresholded  Government  Industry: type 3  Industry: type 9  \\\nCNT_CHILDREN_thresholded                                                        \n0                                0.068878          0.100096          0.073478   \n1                                0.070749          0.099738          0.054374   \n2                                0.067457          0.147139          0.061002   \n3                                0.104651          0.125000          0.044118   \nother1                           0.080000          0.400000          0.250000   \n\nORGANIZATION_TYPE_thresholded  Kindergarten  Medicine     Other    School  \\\nCNT_CHILDREN_thresholded                                                    \n0                                  0.064223  0.061114  0.073407  0.057798   \n1                                  0.077778  0.078431  0.084598  0.057611   \n2                                  0.076439  0.072574  0.079608  0.065392   \n3                                  0.083799  0.047619  0.075540  0.061798   \nother1                             0.121212  0.000000  0.070175  0.181818   \n\nORGANIZATION_TYPE_thresholded  Security  Self-employed  Trade: type 3  \\\nCNT_CHILDREN_thresholded                                                \n0                              0.107637       0.100794       0.098777   \n1                              0.089051       0.102156       0.110881   \n2                              0.066667       0.102868       0.105556   \n3                              0.088235       0.122592       0.146341   \nother1                         0.000000       0.136986            NaN   \n\nORGANIZATION_TYPE_thresholded  Trade: type 7  Transport: type 4       XNA  \\\nCNT_CHILDREN_thresholded                                                    \n0                                   0.090137           0.096132  0.053068   \n1                                   0.101531           0.084067  0.075299   \n2                                   0.090798           0.089286  0.098958   \n3                                   0.197917           0.096774  0.068182   \nother1                              0.166667           0.181818  0.095238   \n\nORGANIZATION_TYPE_thresholded    other2  \nCNT_CHILDREN_thresholded                 \n0                              0.074969  \n1                              0.079169  \n2                              0.078104  \n3                              0.065681  \nother1                         0.086022  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>ORGANIZATION_TYPE_thresholded</th>\n      <th>Business Entity Type 1</th>\n      <th>Business Entity Type 2</th>\n      <th>Business Entity Type 3</th>\n      <th>Construction</th>\n      <th>Government</th>\n      <th>Industry: type 3</th>\n      <th>Industry: type 9</th>\n      <th>Kindergarten</th>\n      <th>Medicine</th>\n      <th>Other</th>\n      <th>School</th>\n      <th>Security</th>\n      <th>Self-employed</th>\n      <th>Trade: type 3</th>\n      <th>Trade: type 7</th>\n      <th>Transport: type 4</th>\n      <th>XNA</th>\n      <th>other2</th>\n    </tr>\n    <tr>\n      <th>CNT_CHILDREN_thresholded</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.082862</td>\n      <td>0.085799</td>\n      <td>0.090673</td>\n      <td>0.118454</td>\n      <td>0.068878</td>\n      <td>0.100096</td>\n      <td>0.073478</td>\n      <td>0.064223</td>\n      <td>0.061114</td>\n      <td>0.073407</td>\n      <td>0.057798</td>\n      <td>0.107637</td>\n      <td>0.100794</td>\n      <td>0.098777</td>\n      <td>0.090137</td>\n      <td>0.096132</td>\n      <td>0.053068</td>\n      <td>0.074969</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.074125</td>\n      <td>0.081016</td>\n      <td>0.097098</td>\n      <td>0.128470</td>\n      <td>0.070749</td>\n      <td>0.099738</td>\n      <td>0.054374</td>\n      <td>0.077778</td>\n      <td>0.078431</td>\n      <td>0.084598</td>\n      <td>0.057611</td>\n      <td>0.089051</td>\n      <td>0.102156</td>\n      <td>0.110881</td>\n      <td>0.101531</td>\n      <td>0.084067</td>\n      <td>0.075299</td>\n      <td>0.079169</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.088768</td>\n      <td>0.086730</td>\n      <td>0.094735</td>\n      <td>0.076812</td>\n      <td>0.067457</td>\n      <td>0.147139</td>\n      <td>0.061002</td>\n      <td>0.076439</td>\n      <td>0.072574</td>\n      <td>0.079608</td>\n      <td>0.065392</td>\n      <td>0.066667</td>\n      <td>0.102868</td>\n      <td>0.105556</td>\n      <td>0.090798</td>\n      <td>0.089286</td>\n      <td>0.098958</td>\n      <td>0.078104</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.086420</td>\n      <td>0.115108</td>\n      <td>0.113139</td>\n      <td>0.104167</td>\n      <td>0.104651</td>\n      <td>0.125000</td>\n      <td>0.044118</td>\n      <td>0.083799</td>\n      <td>0.047619</td>\n      <td>0.075540</td>\n      <td>0.061798</td>\n      <td>0.088235</td>\n      <td>0.122592</td>\n      <td>0.146341</td>\n      <td>0.197917</td>\n      <td>0.096774</td>\n      <td>0.068182</td>\n      <td>0.065681</td>\n    </tr>\n    <tr>\n      <th>other1</th>\n      <td>0.125000</td>\n      <td>0.150000</td>\n      <td>0.147541</td>\n      <td>0.384615</td>\n      <td>0.080000</td>\n      <td>0.400000</td>\n      <td>0.250000</td>\n      <td>0.121212</td>\n      <td>0.000000</td>\n      <td>0.070175</td>\n      <td>0.181818</td>\n      <td>0.000000</td>\n      <td>0.136986</td>\n      <td>NaN</td>\n      <td>0.166667</td>\n      <td>0.181818</td>\n      <td>0.095238</td>\n      <td>0.086022</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"ORGANIZATION_TYPE_thresholded  Business Entity Type 1  Business Entity Type 2  \\\nCNT_CHILDREN_thresholded                                                        \n0                                            0.012637                0.021983   \n1                                            0.004738                0.008068   \n2                                            0.001795                0.003749   \n3                                            0.000263                0.000452   \nother1                                       0.000026                0.000065   \n\nORGANIZATION_TYPE_thresholded  Business Entity Type 3  Construction  \\\nCNT_CHILDREN_thresholded                                              \n0                                            0.143026      0.014221   \n1                                            0.053452      0.005037   \n2                                            0.021557      0.002244   \n3                                            0.002673      0.000312   \nother1                                       0.000397      0.000042   \n\nORGANIZATION_TYPE_thresholded  Government  Industry: type 3  Industry: type 9  \\\nCNT_CHILDREN_thresholded                                                        \n0                                0.021765          0.006790          0.006462   \n1                                0.007860          0.002478          0.002751   \n2                                0.003567          0.001193          0.001493   \n3                                0.000559          0.000182          0.000221   \nother1                           0.000081          0.000016          0.000026   \n\nORGANIZATION_TYPE_thresholded  Kindergarten  Medicine     Other    School  \\\nCNT_CHILDREN_thresholded                                                    \n0                                  0.012507  0.024051  0.036282  0.018848   \n1                                  0.005561  0.007961  0.011570  0.006153   \n2                                  0.003616  0.003854  0.005310  0.003232   \n3                                  0.000582  0.000478  0.000904  0.000579   \nother1                             0.000107  0.000055  0.000185  0.000107   \n\nORGANIZATION_TYPE_thresholded  Security  Self-employed  Trade: type 3  \\\nCNT_CHILDREN_thresholded                                                \n0                              0.007281       0.079044       0.006914   \n1                              0.002228       0.030623       0.003138   \n2                              0.000927       0.013151       0.001171   \n3                              0.000111       0.001857       0.000133   \nother1                         0.000013       0.000237       0.000000   \n\nORGANIZATION_TYPE_thresholded  Trade: type 7  Transport: type 4       XNA  \\\nCNT_CHILDREN_thresholded                                                    \n0                                   0.016090           0.011434  0.173847   \n1                                   0.006374           0.004062  0.004621   \n2                                   0.002650           0.001821  0.001249   \n3                                   0.000312           0.000202  0.000286   \nother1                              0.000039           0.000036  0.000068   \n\nORGANIZATION_TYPE_thresholded    other2  \nCNT_CHILDREN_thresholded                 \n0                              0.087187  \n1                              0.032080  \n2                              0.014406  \n3                              0.001980  \nother1                         0.000302  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>ORGANIZATION_TYPE_thresholded</th>\n      <th>Business Entity Type 1</th>\n      <th>Business Entity Type 2</th>\n      <th>Business Entity Type 3</th>\n      <th>Construction</th>\n      <th>Government</th>\n      <th>Industry: type 3</th>\n      <th>Industry: type 9</th>\n      <th>Kindergarten</th>\n      <th>Medicine</th>\n      <th>Other</th>\n      <th>School</th>\n      <th>Security</th>\n      <th>Self-employed</th>\n      <th>Trade: type 3</th>\n      <th>Trade: type 7</th>\n      <th>Transport: type 4</th>\n      <th>XNA</th>\n      <th>other2</th>\n    </tr>\n    <tr>\n      <th>CNT_CHILDREN_thresholded</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.012637</td>\n      <td>0.021983</td>\n      <td>0.143026</td>\n      <td>0.014221</td>\n      <td>0.021765</td>\n      <td>0.006790</td>\n      <td>0.006462</td>\n      <td>0.012507</td>\n      <td>0.024051</td>\n      <td>0.036282</td>\n      <td>0.018848</td>\n      <td>0.007281</td>\n      <td>0.079044</td>\n      <td>0.006914</td>\n      <td>0.016090</td>\n      <td>0.011434</td>\n      <td>0.173847</td>\n      <td>0.087187</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.004738</td>\n      <td>0.008068</td>\n      <td>0.053452</td>\n      <td>0.005037</td>\n      <td>0.007860</td>\n      <td>0.002478</td>\n      <td>0.002751</td>\n      <td>0.005561</td>\n      <td>0.007961</td>\n      <td>0.011570</td>\n      <td>0.006153</td>\n      <td>0.002228</td>\n      <td>0.030623</td>\n      <td>0.003138</td>\n      <td>0.006374</td>\n      <td>0.004062</td>\n      <td>0.004621</td>\n      <td>0.032080</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.001795</td>\n      <td>0.003749</td>\n      <td>0.021557</td>\n      <td>0.002244</td>\n      <td>0.003567</td>\n      <td>0.001193</td>\n      <td>0.001493</td>\n      <td>0.003616</td>\n      <td>0.003854</td>\n      <td>0.005310</td>\n      <td>0.003232</td>\n      <td>0.000927</td>\n      <td>0.013151</td>\n      <td>0.001171</td>\n      <td>0.002650</td>\n      <td>0.001821</td>\n      <td>0.001249</td>\n      <td>0.014406</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.000263</td>\n      <td>0.000452</td>\n      <td>0.002673</td>\n      <td>0.000312</td>\n      <td>0.000559</td>\n      <td>0.000182</td>\n      <td>0.000221</td>\n      <td>0.000582</td>\n      <td>0.000478</td>\n      <td>0.000904</td>\n      <td>0.000579</td>\n      <td>0.000111</td>\n      <td>0.001857</td>\n      <td>0.000133</td>\n      <td>0.000312</td>\n      <td>0.000202</td>\n      <td>0.000286</td>\n      <td>0.001980</td>\n    </tr>\n    <tr>\n      <th>other1</th>\n      <td>0.000026</td>\n      <td>0.000065</td>\n      <td>0.000397</td>\n      <td>0.000042</td>\n      <td>0.000081</td>\n      <td>0.000016</td>\n      <td>0.000026</td>\n      <td>0.000107</td>\n      <td>0.000055</td>\n      <td>0.000185</td>\n      <td>0.000107</td>\n      <td>0.000013</td>\n      <td>0.000237</td>\n      <td>0.000000</td>\n      <td>0.000039</td>\n      <td>0.000036</td>\n      <td>0.000068</td>\n      <td>0.000302</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\n Applicants who are in Business entity Type 3  with either zero or 1 child have very high default rate \n ","metadata":{}},{"cell_type":"markdown","source":"### BUREAU DATASET","metadata":{}},{"cell_type":"code","source":"# Calculate BUREAU_ACTIVE_CREDIT_COUNT\nbureau_active_credit_count = bureau[bureau['CREDIT_ACTIVE'] == 'Active'].groupby('SK_ID_CURR').size().rename('BUREAU_ACTIVE_CREDIT_COUNT')\n\n\n# Calculate BUREAU_DPD_MAX\n# Aggregate maximum months balance for each SK_ID_BUREAU in bureau_balance\nbureau_balance_dpd_max = bureau_balance.groupby('SK_ID_BUREAU')['MONTHS_BALANCE'].max().rename('BUREAU_DPD_MAX')\n\n# Merge bureau_balance_dpd_max with bureau to get SK_ID_CURR\nbureau_combined = bureau[['SK_ID_BUREAU', 'SK_ID_CURR']].merge(bureau_balance_dpd_max, on='SK_ID_BUREAU', how='left')\n\n# Aggregate maximum days past due for each SK_ID_CURR\nbureau_dpd_max = bureau_combined.groupby('SK_ID_CURR')['BUREAU_DPD_MAX'].max()\n\n# Calculate BUREAU_CREDIT_TYPE_COUNT\nbureau_credit_type_count = bureau.groupby('SK_ID_CURR')['CREDIT_TYPE'].nunique().rename('BUREAU_CREDIT_TYPE_COUNT')\n\n# Align indices and merge the features\nbureau_features = pd.DataFrame({\n    'SK_ID_CURR': bureau['SK_ID_CURR'].unique()\n}).set_index('SK_ID_CURR')\n\nbureau_features = bureau_features.join(bureau_active_credit_count).join(bureau_dpd_max).join(bureau_credit_type_count).fillna(0)\n\n# Perform left join with application data to include TARGET variable\nbureau_features = application[['SK_ID_CURR', 'TARGET']].merge(bureau_features.reset_index(), on='SK_ID_CURR', how='left')\n\n# Fill NA values with 0 for the newly created features in case there are any mismatches\nbureau_features.fillna({\n    'BUREAU_ACTIVE_CREDIT_COUNT': 0,\n    'BUREAU_DPD_MAX': 0,\n    'BUREAU_CREDIT_TYPE_COUNT': 0\n}, inplace=True)\n\n# Display the first few rows of the final dataset including the TARGET variable\nbureau_features.head()","metadata":{"scrolled":true,"execution":{"iopub.status.busy":"2024-08-26T01:36:01.197261Z","iopub.execute_input":"2024-08-26T01:36:01.197641Z","iopub.status.idle":"2024-08-26T01:36:02.895516Z","shell.execute_reply.started":"2024-08-26T01:36:01.197602Z","shell.execute_reply":"2024-08-26T01:36:02.894173Z"},"trusted":true},"execution_count":44,"outputs":[{"execution_count":44,"output_type":"execute_result","data":{"text/plain":"   SK_ID_CURR  TARGET  BUREAU_ACTIVE_CREDIT_COUNT  BUREAU_DPD_MAX  \\\n0      100002       1                         2.0             0.0   \n1      100003       0                         1.0             0.0   \n2      100004       0                         0.0             0.0   \n3      100006       0                         0.0             0.0   \n4      100007       0                         0.0             0.0   \n\n   BUREAU_CREDIT_TYPE_COUNT  \n0                       2.0  \n1                       2.0  \n2                       1.0  \n3                       0.0  \n4                       1.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SK_ID_CURR</th>\n      <th>TARGET</th>\n      <th>BUREAU_ACTIVE_CREDIT_COUNT</th>\n      <th>BUREAU_DPD_MAX</th>\n      <th>BUREAU_CREDIT_TYPE_COUNT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>100002</td>\n      <td>1</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>100003</td>\n      <td>0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>100004</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>100006</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100007</td>\n      <td>0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"#### **Box Plot on Bureau Dataset**","metadata":{}},{"cell_type":"code","source":"# Plot box plot of 'AMT_CREDIT' split by 'TARGET' variable\nplt.figure(figsize=(12, 8))\nsns.boxplot(data=bureau_features, x='TARGET', y='BUREAU_ACTIVE_CREDIT_COUNT')\nplt.title('Box Plot of BUREAU_ACTIVE_CREDIT_COUNT by TARGET', fontsize=16)\nplt.xlabel('TARGET', fontsize=14)\nplt.ylabel('BUREAU_ACTIVE_CREDIT_COUNT', fontsize=14)\nplt.grid(True)\nplt.show()\n\n# Plot box plot of 'AMT_INCOME_TOTAL' split by 'TARGET' variable\nplt.figure(figsize=(12, 8))\nsns.boxplot(data=bureau_features, x='TARGET', y='BUREAU_DPD_MAX')\nplt.title('Box Plot of BUREAU_DPD_MAX by TARGET', fontsize=16)\nplt.xlabel('TARGET', fontsize=14)\nplt.ylabel('BUREAU_DPD_MAX', fontsize=14)\nplt.grid(True)\nplt.show()\n\n# Plot box plot of 'AMT_INCOME_TOTAL' split by 'TARGET' variable\nplt.figure(figsize=(12, 8))\nsns.boxplot(data=bureau_features, x='TARGET', y='BUREAU_CREDIT_TYPE_COUNT')\nplt.title('Box Plot of BUREAU_CREDIT_TYPE_COUNT by TARGET', fontsize=16)\nplt.xlabel('TARGET', fontsize=14)\nplt.ylabel('BUREAU_CREDIT_TYPE_COUNT', fontsize=14)\nplt.grid(True)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:36:02.905201Z","iopub.execute_input":"2024-08-26T01:36:02.905609Z","iopub.status.idle":"2024-08-26T01:36:03.937409Z","shell.execute_reply.started":"2024-08-26T01:36:02.905568Z","shell.execute_reply":"2024-08-26T01:36:03.936020Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Figure size 1200x800 with 0 Axes>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='TARGET', ylabel='BUREAU_ACTIVE_CREDIT_COUNT'>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Box Plot of BUREAU_ACTIVE_CREDIT_COUNT by TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'BUREAU_ACTIVE_CREDIT_COUNT')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":""},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Figure size 1200x800 with 0 Axes>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='TARGET', ylabel='BUREAU_DPD_MAX'>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Box Plot of BUREAU_DPD_MAX by TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'BUREAU_DPD_MAX')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":""},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Figure size 1200x800 with 0 Axes>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"<Axes: xlabel='TARGET', ylabel='BUREAU_CREDIT_TYPE_COUNT'>"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Box Plot of BUREAU_CREDIT_TYPE_COUNT by TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 0, 'TARGET')"},"metadata":{}},{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Text(0, 0.5, 'BUREAU_CREDIT_TYPE_COUNT')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nThe distribution of BUREAU_ACTIVE_CREDIT_COUNT is quite similar between applicants with and without payment difficulties.There are several outliers in both groups.\n\nThe BUREAU_DPD_MAX variable mostly hovers around 0 for both groups, indicating that most applicants have no or very minimal overdue payments.the presence of significant outliers (negative DPD values) in both groups could indicate issues with applicants who have historically had substantial payment delays.\n\nThe distribution of BUREAU_CREDIT_TYPE_COUNT is very similar between applicants with and without payment difficulties.  The similarity in distribution suggests that the diversity of credit types might not strongly differentiate between applicants with and without payment difficulties.","metadata":{}},{"cell_type":"code","source":"#plot_variable_by_target(bureau_features, 'BUREAU_ACTIVE_CREDIT_COUNT', 'TARGET')\nbureau_features['TARGET'].mean()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:36:03.938981Z","iopub.execute_input":"2024-08-26T01:36:03.939429Z","iopub.status.idle":"2024-08-26T01:36:03.947733Z","shell.execute_reply.started":"2024-08-26T01:36:03.939386Z","shell.execute_reply":"2024-08-26T01:36:03.946592Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"0.08072881945686496"},"metadata":{}}]},{"cell_type":"markdown","source":"#### *Drill down on BUREAU_CREDIT_TYPE_COUNT with No of applicants.*","metadata":{}},{"cell_type":"code","source":"bureau_features.groupby('BUREAU_CREDIT_TYPE_COUNT')[['TARGET']].mean()\npd.DataFrame(bureau_features['BUREAU_CREDIT_TYPE_COUNT'].value_counts()/bureau_features.shape[0])","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:36:03.949306Z","iopub.execute_input":"2024-08-26T01:36:03.949693Z","iopub.status.idle":"2024-08-26T01:36:03.993332Z","shell.execute_reply.started":"2024-08-26T01:36:03.949654Z","shell.execute_reply":"2024-08-26T01:36:03.992259Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"                            TARGET\nBUREAU_CREDIT_TYPE_COUNT          \n0.0                       0.101249\n1.0                       0.074111\n2.0                       0.079926\n3.0                       0.074856\n4.0                       0.066859\n5.0                       0.061538\n6.0                       0.250000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TARGET</th>\n    </tr>\n    <tr>\n      <th>BUREAU_CREDIT_TYPE_COUNT</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0.0</th>\n      <td>0.101249</td>\n    </tr>\n    <tr>\n      <th>1.0</th>\n      <td>0.074111</td>\n    </tr>\n    <tr>\n      <th>2.0</th>\n      <td>0.079926</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.074856</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.066859</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.061538</td>\n    </tr>\n    <tr>\n      <th>6.0</th>\n      <td>0.250000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"                             count\nBUREAU_CREDIT_TYPE_COUNT          \n2.0                       0.467365\n1.0                       0.307856\n0.0                       0.143149\n3.0                       0.075763\n4.0                       0.005642\n5.0                       0.000211\n6.0                       0.000013","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>BUREAU_CREDIT_TYPE_COUNT</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2.0</th>\n      <td>0.467365</td>\n    </tr>\n    <tr>\n      <th>1.0</th>\n      <td>0.307856</td>\n    </tr>\n    <tr>\n      <th>0.0</th>\n      <td>0.143149</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.075763</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.005642</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.000211</td>\n    </tr>\n    <tr>\n      <th>6.0</th>\n      <td>0.000013</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n\nMost applicants have either 2 (46.737%) or 1 (30.786%) credit types.\n\nApplicants with 6 credit types are a clear outlier in terms of risk. Even though they represent only 0.001% of the population, they have a 25% likelihood of payment difficulties.\n\nApplicants with 1 to 4 credit types have a relatively stable and lower likelihood of payment difficulties.","metadata":{}},{"cell_type":"code","source":"bureau_features.groupby('BUREAU_ACTIVE_CREDIT_COUNT')[['TARGET']].mean()\npd.DataFrame(bureau_features['BUREAU_ACTIVE_CREDIT_COUNT'].value_counts()/bureau_features.shape[0])\n# .to_clipboard()","metadata":{"execution":{"iopub.status.busy":"2024-08-26T01:36:03.994954Z","iopub.execute_input":"2024-08-26T01:36:03.995366Z","iopub.status.idle":"2024-08-26T01:36:04.041044Z","shell.execute_reply.started":"2024-08-26T01:36:03.995325Z","shell.execute_reply":"2024-08-26T01:36:04.039787Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"                              TARGET\nBUREAU_ACTIVE_CREDIT_COUNT          \n0.0                         0.078330\n1.0                         0.070982\n2.0                         0.074439\n3.0                         0.082608\n4.0                         0.092328\n5.0                         0.106630\n6.0                         0.116915\n7.0                         0.135932\n8.0                         0.137136\n9.0                         0.158974\n10.0                        0.171765\n11.0                        0.218182\n12.0                        0.297297\n13.0                        0.156863\n14.0                        0.407407\n15.0                        0.285714\n16.0                        0.000000\n17.0                        0.714286\n18.0                        1.000000\n19.0                        0.250000\n20.0                        0.000000\n22.0                        1.000000\n32.0                        1.000000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TARGET</th>\n    </tr>\n    <tr>\n      <th>BUREAU_ACTIVE_CREDIT_COUNT</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0.0</th>\n      <td>0.078330</td>\n    </tr>\n    <tr>\n      <th>1.0</th>\n      <td>0.070982</td>\n    </tr>\n    <tr>\n      <th>2.0</th>\n      <td>0.074439</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.082608</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.092328</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.106630</td>\n    </tr>\n    <tr>\n      <th>6.0</th>\n      <td>0.116915</td>\n    </tr>\n    <tr>\n      <th>7.0</th>\n      <td>0.135932</td>\n    </tr>\n    <tr>\n      <th>8.0</th>\n      <td>0.137136</td>\n    </tr>\n    <tr>\n      <th>9.0</th>\n      <td>0.158974</td>\n    </tr>\n    <tr>\n      <th>10.0</th>\n      <td>0.171765</td>\n    </tr>\n    <tr>\n      <th>11.0</th>\n      <td>0.218182</td>\n    </tr>\n    <tr>\n      <th>12.0</th>\n      <td>0.297297</td>\n    </tr>\n    <tr>\n      <th>13.0</th>\n      <td>0.156863</td>\n    </tr>\n    <tr>\n      <th>14.0</th>\n      <td>0.407407</td>\n    </tr>\n    <tr>\n      <th>15.0</th>\n      <td>0.285714</td>\n    </tr>\n    <tr>\n      <th>16.0</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>17.0</th>\n      <td>0.714286</td>\n    </tr>\n    <tr>\n      <th>18.0</th>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>19.0</th>\n      <td>0.250000</td>\n    </tr>\n    <tr>\n      <th>20.0</th>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>22.0</th>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>32.0</th>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"                               count\nBUREAU_ACTIVE_CREDIT_COUNT          \n0.0                         0.293846\n1.0                         0.240977\n2.0                         0.189857\n3.0                         0.123609\n4.0                         0.071675\n5.0                         0.039189\n6.0                         0.019859\n7.0                         0.010263\n8.0                         0.005359\n9.0                         0.002536\n10.0                        0.001382\n11.0                        0.000715\n12.0                        0.000361\n13.0                        0.000166\n14.0                        0.000088\n15.0                        0.000046\n17.0                        0.000023\n16.0                        0.000016\n19.0                        0.000013\n22.0                        0.000007\n18.0                        0.000007\n20.0                        0.000003\n32.0                        0.000003","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n    </tr>\n    <tr>\n      <th>BUREAU_ACTIVE_CREDIT_COUNT</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0.0</th>\n      <td>0.293846</td>\n    </tr>\n    <tr>\n      <th>1.0</th>\n      <td>0.240977</td>\n    </tr>\n    <tr>\n      <th>2.0</th>\n      <td>0.189857</td>\n    </tr>\n    <tr>\n      <th>3.0</th>\n      <td>0.123609</td>\n    </tr>\n    <tr>\n      <th>4.0</th>\n      <td>0.071675</td>\n    </tr>\n    <tr>\n      <th>5.0</th>\n      <td>0.039189</td>\n    </tr>\n    <tr>\n      <th>6.0</th>\n      <td>0.019859</td>\n    </tr>\n    <tr>\n      <th>7.0</th>\n      <td>0.010263</td>\n    </tr>\n    <tr>\n      <th>8.0</th>\n      <td>0.005359</td>\n    </tr>\n    <tr>\n      <th>9.0</th>\n      <td>0.002536</td>\n    </tr>\n    <tr>\n      <th>10.0</th>\n      <td>0.001382</td>\n    </tr>\n    <tr>\n      <th>11.0</th>\n      <td>0.000715</td>\n    </tr>\n    <tr>\n      <th>12.0</th>\n      <td>0.000361</td>\n    </tr>\n    <tr>\n      <th>13.0</th>\n      <td>0.000166</td>\n    </tr>\n    <tr>\n      <th>14.0</th>\n      <td>0.000088</td>\n    </tr>\n    <tr>\n      <th>15.0</th>\n      <td>0.000046</td>\n    </tr>\n    <tr>\n      <th>17.0</th>\n      <td>0.000023</td>\n    </tr>\n    <tr>\n      <th>16.0</th>\n      <td>0.000016</td>\n    </tr>\n    <tr>\n      <th>19.0</th>\n      <td>0.000013</td>\n    </tr>\n    <tr>\n      <th>22.0</th>\n      <td>0.000007</td>\n    </tr>\n    <tr>\n      <th>18.0</th>\n      <td>0.000007</td>\n    </tr>\n    <tr>\n      <th>20.0</th>\n      <td>0.000003</td>\n    </tr>\n    <tr>\n      <th>32.0</th>\n      <td>0.000003</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**_Key Insights:_**\n \n Applicants with 1 to 3 active credits generally have a risk profile close to or slightly below the average, making them relatively safer.\n\n Applicants with 5+  active credit count showing gradually increasing risk.","metadata":{}},{"cell_type":"markdown","source":"## 5. Summary\n\n1. _Income and Credit Amounts:_\n\nLow Default Rate: High-income individuals with medium credit amounts are less likely to default.\nHigh Default Rate: Low-income individuals with very low credit amounts are more prone to default.\n\n2. _EMI  and Income:_\n\nIncreased Default Risk:\nHigh EMI combined with medium income.\nMedium EMI with low income.\nHigh EMI with low income, which significantly heightens default risk.\n\n3. _Occupations and Default Rates:_\n\nHigh Default Rate: Laborers, sales staff, cooking staff, and security staff.\nLow Default Rate: Accounts personnel consistently exhibit low default rates.\n\n4. _Business Entity Type and Child Count:_\n\nHigh Default Rate: Applicants in Business Entity Type 3 with zero or one child show a notably high default rate.\n\n5. _Credit Characteristics:_\n\nActive Credit Count: The distribution of active credit counts is similar between those with and without payment difficulties.\nOverdue Payments (BUREAU_DPD_MAX): Generally around 0, but with some outliers.\nDiversity of Credit Types (BUREAU_CREDIT_TYPE_COUNT):\nApplicants with 6 credit types are high-risk outliers.\nThose with 1 to 4 credit types show relatively stable and lower default likelihood.\nAn active credit count of 5+ is associated with a gradually increasing risk.dually increasing risk.\n","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}